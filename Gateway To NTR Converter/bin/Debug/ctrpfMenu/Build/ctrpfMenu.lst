         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 00000038 T CTRPluginFramework::code_OneTwoThreeFour(CTRPluginFramework::MenuEntry*)
00101040 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.15]
001010e0 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
001010e4 00000100 T CTRPluginFramework::main()
001011e4 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
001011e4 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00101214 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00101214 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
001012b4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
001012b4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
00101364 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00101364 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00101430 000002a8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001016d8 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
0010170c 00000424 T CTRPluginFramework::KeepThreadMain(void*)
00101b30 00000038 T onLoadCro
00101b68 00000164 T CTRPluginFramework::Initialize()
00101ccc 00000098 T CTRPluginFramework::ThreadExit()
00101d64 00000060 T abort
00101dc4 00000024 T CTRPluginFramework::ThreadInit(void*)
00101de8 00000068 T LaunchMainThread
00101e50 0000000c t _GLOBAL__sub_I_g_mainThread
00101e5c 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00101e5c 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00101e74 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00101e74 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00101e94 00000008 T CTRPluginFramework::Color::ToU32() const
00101ea0 00000120 T CTRPluginFramework::Color::Fade(double)
00101fc0 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
00102000 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
00102080 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
00102258 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
00102424 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
001024a4 00000004 T CTRPluginFramework::OSD::TryLock()
001024a8 00000004 T CTRPluginFramework::OSD::Unlock()
001024ac 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00102570 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
00102618 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00102618 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00102668 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00102668 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001026d0 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
001026d0 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
001026fc 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
00102704 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
0010270c 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00102728 00000028 T CTRPluginFramework::Keyboard::Open() const
00102750 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
001027c8 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
00102878 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
001028cc 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00102934 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
001029d0 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00102a5c 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
00102b04 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00102bec 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00102c78 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
00102d20 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
00102e08 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00102e94 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
00102f3c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
00103024 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00103024 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00103070 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00103070 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
001030a0 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
001030a8 00000028 t __tcf_0
001030d0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
00103148 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
00103150 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
001031d0 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
0010324c 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
00103324 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
00103324 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
00103340 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00103340 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00103380 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
00103390 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
00103450 00000020 T CTRPluginFramework::HotkeyManager::Count()
00103470 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
001035a4 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
001036cc 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001036cc 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00103738 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuEntry*) const
0010374c 00000038 T CTRPluginFramework::PluginMenu::Run() const
00103784 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0010378c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0010379c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
001037a8 00000030 t CTRPluginFramework::GetCurrentTime()
001037d8 00000014 T CTRPluginFramework::Clock::Clock()
001037d8 00000014 T CTRPluginFramework::Clock::Clock()
001037ec 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
00103824 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
00103854 00000044 T CTRPluginFramework::Clock::Restart()
00103898 00000014 T CTRPluginFramework::Controller::GetKeysDown()
001038ac 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
001038c8 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
001038e4 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
00103900 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0010391c 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
00103948 0000002c T CTRPluginFramework::Controller::Update()
00103974 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
001039e4 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
00103b0c 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
00103b90 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
00103c0c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
00103c84 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
00103ce8 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
00103d78 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00103e8c 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00103f00 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00103f8c 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104004 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010407c 00000034 T CTRPluginFramework::Directory::Close() const
001040b0 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001041b0 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
001041c4 00000008 T CTRPluginFramework::Directory::IsOpen() const
001041cc 0000002c T CTRPluginFramework::Directory::Directory()
001041cc 0000002c T CTRPluginFramework::Directory::Directory()
001041f8 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001041f8 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0010422c 0000002c T CTRPluginFramework::Directory::~Directory()
0010422c 0000002c T CTRPluginFramework::Directory::~Directory()
00104258 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
00104358 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010439c 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
001043e8 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
0010456c 0000010c T CTRPluginFramework::Directory::_List() const
00104678 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
001047e0 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00104940 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
00104978 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104a58 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104ab8 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104b40 0000005c T CTRPluginFramework::File::Close() const
00104b9c 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00104c78 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
00104d28 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
00104e10 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00104e3c 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
00104eec 00000008 T CTRPluginFramework::File::Tell() const
00104ef4 00000010 T CTRPluginFramework::File::Rewind() const
00104f04 00000008 T CTRPluginFramework::File::Flush() const
00104f0c 00000044 T CTRPluginFramework::File::GetSize() const
00104f50 00000008 T CTRPluginFramework::File::IsOpen() const
00104f58 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
00104f6c 00000034 T CTRPluginFramework::File::File()
00104f6c 00000034 T CTRPluginFramework::File::File()
00104fa0 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00104fa0 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00104fe0 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
001050e0 00000010 T CTRPluginFramework::Process::GetHandle()
001050f0 00000010 T CTRPluginFramework::Process::GetTitleID()
00105100 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00105160 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00105198 00000024 T CTRPluginFramework::Process::GetTextSize()
001051bc 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
00105218 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
0010528c 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
00105334 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
001053ec 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0010549c 00000020 T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
001054bc 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
001054fc 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
00105528 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0010554c 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
00105594 00000010 T CTRPluginFramework::System::IsNew3DS()
001055a4 00000010 T CTRPluginFramework::System::IsLoaderNTR()
001055b4 00000014 T CTRPluginFramework::Time::Time()
001055b4 00000014 T CTRPluginFramework::Time::Time()
001055c8 00000020 T CTRPluginFramework::Time::AsSeconds() const
001055e8 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
00105600 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
00105608 00000028 T CTRPluginFramework::Seconds(float)
00105630 00000010 T CTRPluginFramework::Milliseconds(int)
00105640 00000008 T CTRPluginFramework::Microseconds(long long)
00105648 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0010565c 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
00105670 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
00105684 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
001056a4 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
001056f0 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
00105708 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
0010576c 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
001057e0 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0010583c 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
001058bc 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105970 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00105ab0 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
00105ae8 0000001c T CTRPluginFramework::InitializeRandomEngine()
00105b04 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00105c10 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
00105c78 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
00105c94 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
00105d0c 0000001c W CTRPluginFramework::File::~File()
00105d0c 0000001c W CTRPluginFramework::File::~File()
00105d28 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105d28 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105dc8 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
00105dc8 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
00105e28 00000010 W CTRPluginFramework::BMPImage::DataClear()
00105e38 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
00105f6c 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
00105f98 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
001060d0 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
00106368 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
00106438 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
001064f0 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
001065a8 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
00106604 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
00106798 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
00106818 000001ec T CTRPluginFramework::Preferences::WriteSettings()
00106a04 00000004 T CTRPluginFramework::Preferences::Initialize()
00106a08 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
00106a80 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
00106a88 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
00106b00 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
00106b0c 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
00106b18 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
00106c18 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
00106c18 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
00106c48 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
00106d14 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
00106e28 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0010702c 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
00107084 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
00107558 00000010 T CTRPluginFramework::Glyph::Width() const
00107568 00000060 T CTRPluginFramework::Font::Initialize()
001075c8 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0010791c 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
00107c24 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
00107d18 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
00107d80 00000020 T CTRPluginFramework::Font::GetGlyph(char)
00107da0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
00107da0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
00107dcc 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
00107dcc 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
00107dec 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
00107ea4 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
00107ef8 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
00107ef8 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
00107f94 0000000c T CTRPluginFramework::OSDImpl::Lock()
00107fa0 0000001c T CTRPluginFramework::OSDImpl::TryLock()
00107fbc 0000000c T CTRPluginFramework::OSDImpl::Unlock()
00107fc8 000000e4 T CTRPluginFramework::OSDImpl::Draw()
001080ac 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
00108184 000001b8 T CTRPluginFramework::InstallOSD()
0010833c 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
00108364 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
00108444 00000108 T CTRPluginFramework::OSDImpl::Update()
0010854c 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
00108b64 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
00108bcc 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
00108c30 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
00108c5c 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
00108c80 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
00108cb8 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
00108cf0 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
00108d20 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
00108d48 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
00108d68 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
00108da4 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
00108dec 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
00108e30 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
00108f34 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
00108f70 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
00108fe0 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109064 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
001090dc 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109174 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109218 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
001092b8 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
001092d8 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
00109314 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0010958c 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
001096ac 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
001096c8 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
0010970c 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
001097b4 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
0010985c 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0010991c 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
001099b0 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
00109a58 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
00109aac 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
00109aac 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
00109af0 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
00109b44 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
00109cd8 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
00109d88 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
00109dd0 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010a45c 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010a498 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010a5d8 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010a71c 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010a7e4 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010a9a8 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010a9d8 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010ab08 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010abdc 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010ad28 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010ae2c 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010af80 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0010b118 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0010b304 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0010b374 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0010b3e0 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0010b404 00000028 T CTRPluginFramework::Window::~Window()
0010b404 00000028 T CTRPluginFramework::Window::~Window()
0010b42c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010b42c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010b430 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0010b44c 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010b460 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
0010b4c4 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010b4c4 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010b58c 00000064 T CTRPluginFramework::Window::Draw() const
0010b5f0 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0010b6c8 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0010b6e0 00000018 T CTRPluginFramework::Window::MustClose() const
0010b6f8 00000014 T CTRPluginFramework::Window::Close() const
0010b70c 00000004 T CTRPluginFramework::Window::GetRect() const
0010b710 0000002c T CTRPluginFramework::Window::Initialize()
0010b73c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010b7bc 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0010b864 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0010ba14 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0010ba40 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0010ba7c 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0010bab8 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0010baf4 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0010bb30 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0010bb6c 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0010bb98 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0010bbd4 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0010bc10 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0010bc4c 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0010bc88 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0010bcb4 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0010bcf0 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0010bd1c 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0010bd48 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0010bd74 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
0010bdb0 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0010bddc 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0010be18 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0010be44 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0010be78 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0010beb4 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0010bee0 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0010bf1c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0010bf48 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0010bf74 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0010bfa0 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0010bfcc 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0010bff8 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0010c024 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0010c050 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0010c07c 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0010c0b8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
0010c0d4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010c0d4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010c0d8 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010c0ec 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
0010c150 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
0010c1d4 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
0010c29c 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0010c32c 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0010c448 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
0010c4b8 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
0010c558 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
0010c584 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010c584 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010c5b4 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
0010c688 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
0010c6c4 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010c6c4 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010c7e0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010c860 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
0010c8d8 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
0010c97c 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010c97c 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010cac0 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010cac0 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010cc08 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0010cc08 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0010cc6c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0010cc74 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0010cc7c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0010cc84 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0010cc8c 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
0010cc94 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0010cdf8 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0010d28c 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0010d2f0 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0010d380 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0010d400 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0010d484 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0010d5e4 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
0010d864 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0010dde0 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0010de48 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0010de98 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0010df08 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0010df10 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0010df10 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0010df54 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
0010df84 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0010e05c 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0010e228 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0010e254 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0010e254 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0010e27c 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
0010e398 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
0010e428 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0010ed1c 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0010f610 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
00110954 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
00112094 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
001120d8 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0011232c 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
0011237c 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
001123e4 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0011242c 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
00112750 00000250 T CTRPluginFramework::KeyboardImpl::Run()
001129a0 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
00112a18 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00112a20 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
00112a34 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00112a34 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00112a5c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00112a5c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00112a84 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
00112aa0 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00112abc 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
00112bd4 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00112bd4 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00112cac 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00112cac 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00112d88 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
00112d90 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
00112d9c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
00112da4 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
00112dc8 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
00112df8 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
00112e14 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
00112e7c 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00112e7c 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00112f48 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00112f64 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00112f64 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00113020 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
00113034 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
00113084 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
0011309c 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
001130c0 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
001130d0 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
001130f4 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
001131cc 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0011322c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0011323c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0011324c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0011325c 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
0011325c 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00113260 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00113260 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00113264 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00113280 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
0011329c 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
001132b0 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
001132c4 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
001132ec 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00113350 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
001133b4 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001133dc 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
00113400 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
00113478 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001134e4 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
001135b8 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
00113658 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00113658 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
001138c0 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
001138d4 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0011392c 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00113980 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
00113aa0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00113aa0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00113adc 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
00113c50 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00113cd0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00113d50 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
00113eb0 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
00113f58 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
001140dc 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
00114264 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
00114270 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
001143f4 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
00114438 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00114468 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011453c 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
001145c4 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00114738 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
001147a8 00000030 W CTRPluginFramework::ARCode::~ARCode()
001147a8 00000030 W CTRPluginFramework::ARCode::~ARCode()
001147d8 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0011491c 0000001c W CTRPluginFramework::ARCode::~ARCode()
00114938 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
00114990 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00114990 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
001149bc 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
001149c8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
001149d4 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
00114af0 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
00114b2c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00114b38 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
00114b44 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
00114b64 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
00114c3c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00114dd8 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
00114e2c 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
00114f8c 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
00114fa4 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
001150c8 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
001151a0 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0011535c 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
00115434 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
001154b8 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
001156cc 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
001158d0 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00115ad4 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00115ce8 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
00115d40 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
00115db4 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
00115e28 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00115e80 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
00115f08 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
00115f14 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00115f14 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00115f3c 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00115f58 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
00115fec 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00115fec 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00116014 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00116030 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00116030 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00116058 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00116074 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
00116074 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011609c 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
001160b8 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
001160b8 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
001160d8 00000030 W CTRPluginFramework::TextBox::~TextBox()
001160d8 00000030 W CTRPluginFramework::TextBox::~TextBox()
00116108 0000001c W CTRPluginFramework::TextBox::~TextBox()
00116124 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00116124 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00116214 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0011621c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011621c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
001162b0 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
001162d0 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011645c 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011647c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
00116498 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
001164b4 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
001164bc 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
001164c4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
001164c4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
001164e4 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
001165d8 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
00116d34 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
00116d8c 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00116dbc 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
00116e80 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
00116eb4 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
00116fe4 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
00117120 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
001171e4 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
001172ec 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
001172ec 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
00117354 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
00117450 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
00117590 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00117728 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001177a8 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011781c 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117890 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117910 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
00117988 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
001179cc 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
00117b08 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
00117b70 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
00117cdc 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
00117d2c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
00117dd8 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
001182a4 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
00118314 000000f4 t CTRPluginFramework::ClearSearchFolder()
00118408 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00118408 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00118560 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
001185bc 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
001185bc 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
00118bfc 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
00118c30 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
00118e50 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
00118e78 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
00118ee0 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
00118f10 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
00118fe4 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
00119090 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
001190d0 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0011933c 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
001196c4 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
001197a0 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
001197d8 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
00119a54 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
00119a68 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
00119a7c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
00119a90 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
00119ba4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
00119ba8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
00119bac 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
00119bc4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
00119bdc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
00119bf4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
00119c0c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
00119c24 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
00119c3c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
00119c54 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
00119c6c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
00119c84 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
00119cfc 00000064 t CTRPluginFramework::MenuHotkeyModifier()
00119d60 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00119e80 0000005c t CTRPluginFramework::Reboot()
00119edc 00000064 t CTRPluginFramework::Shutdown()
00119f40 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011a038 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011a178 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011a340 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011a534 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011ad30 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011ad30 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011ae84 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0011af90 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0011b034 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0011b074 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0011b0b0 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0011b0ec 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011b1f4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0011b27c 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
0011b31c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0011b398 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0011b44c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0011b5d8 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0011b620 0000014c T CTRPluginFramework::SearchMenu::_Export()
0011b76c 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0011b8c8 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
0011ba74 00000030 W std::__cxx11::to_string(unsigned long)
0011baa4 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011bb28 00000584 T CTRPluginFramework::SearchMenu::Draw()
0011c0ac 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011c0ac 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011c160 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0011c190 00000230 T CTRPluginFramework::SearchMenu::Update()
0011c3c0 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011c8cc 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
0011c930 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011c930 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011c9c4 0000001c T CTRPluginFramework::SubMenu::operator()()
0011c9e0 00000214 T CTRPluginFramework::SubMenu::Draw()
0011cbf4 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0011ccb0 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0011ccb8 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0011ccd4 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011ce6c 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011ceb4 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
0011cf78 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
0011d038 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
0011d074 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
0011d0ec 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
0011d38c 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
0011d648 00000040 W CTRPluginFramework::Search::~Search()
0011d648 00000040 W CTRPluginFramework::Search::~Search()
0011d688 00000044 T CTRPluginFramework::Search32::~Search32()
0011d688 00000044 T CTRPluginFramework::Search32::~Search32()
0011d6cc 0000001c T CTRPluginFramework::Search32::~Search32()
0011d6e8 0000001c W CTRPluginFramework::Search::~Search()
0011d704 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0011d704 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0011d92c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011d92c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011d94c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0011d94c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0011d9a8 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0011dae0 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0011db28 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0011dc6c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0011ddb0 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011ddf4 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0011de20 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0011df0c 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0011df40 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0011df74 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0011e080 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0011e0c8 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0011e3e0 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011e640 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011e8b8 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011eb18 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0011eb4c 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011ee70 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0011f69c 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0011ff68 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00120814 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001215c4 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00122178 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012286c 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00122c4c 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001233e8 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012382c 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123c74 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001240b8 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001246e8 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124fa4 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125864 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126120 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126d70 00000044 T CTRPluginFramework::Search::UpdateProgress()
00126db4 00000194 T CTRPluginFramework::Search::CheckNextRegion()
00126f48 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
00126fc0 00000008 T CTRPluginFramework::Search::GetHeader() const
00126fc8 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
00127020 0000000c T CTRPluginFramework::Search::GetType() const
0012702c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
00127044 00000070 T CTRPluginFramework::Search::WriteHeader()
001270b4 00000058 T CTRPluginFramework::Search::WriteResults()
0012710c 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
00127158 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
00127378 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
00127378 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
001275b8 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
00127690 0000008c T CTRPluginFramework::Search::CreateIndexTable()
0012771c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012771c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001278c4 00000080 T CTRPluginFramework::Search::Cancel()
00127944 00000118 T CTRPluginFramework::Search::ExecuteSearch()
00127a5c 00000090 T CTRPluginFramework::EventManager::EventManager()
00127a5c 00000090 T CTRPluginFramework::EventManager::EventManager()
00127aec 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
00127c54 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
00127c98 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
00127f24 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
00128028 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
00128030 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00128054 00000004 t addrMapNodeDestructor(rbtree_node*)
00128058 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
00128168 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
00128170 00000050 T CTRPluginFramework::Heap::Free(void*)
001281c0 0000000c T CTRPluginFramework::Heap::SpaceFree()
001281cc 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
001282f4 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
00128340 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
00128358 00000018 T IsPaused
00128370 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
001284f8 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
00128650 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
001286b0 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
001286c8 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
001286c8 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
001286f8 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
00128758 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
00128800 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
00128868 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
0012891c 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
001289d4 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
001289dc 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
00128a38 00000118 T CTRPluginFramework::ScreenImpl::Flush()
00128b50 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
00128c68 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
00128cc0 00000078 T CTRPluginFramework::ScreenImpl::Clean()
00128d38 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
00128dac 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
00128db4 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
00128dbc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
00128dc4 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
00128de0 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
00128dfc 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
00128e50 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
00128e80 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
00128ed8 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
00128f4c 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
0012903c 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
0012904c 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
0012905c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
00129084 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
00129084 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
001290a4 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012912c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012912c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
00129264 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00129368 0000006c T CTRPluginFramework::ARCode::Update()
001293d4 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
001293d4 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
00129498 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
00129498 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
001294d8 00000040 T CTRPluginFramework::ARCodeContext::Update()
00129518 00000048 T CTRPluginFramework::ARCodeContext::Clear()
00129560 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
001295d4 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
00129634 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
00129700 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
00129700 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
0012970c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
00129794 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
001297f0 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
00129f60 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
00129f60 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
00129fe0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
00129fe0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
00129fe0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
00129fe0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012a030 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012ab40 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012ab40 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012ace0 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0012afc4 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
0012afe0 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0012b068 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0012b0a0 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012b224 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012b268 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0012b2cc 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0012b2f8 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012b2f8 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012b320 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0012b36c 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0012b3d0 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0012b48c 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0012b7b4 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0012bc74 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0012c0dc 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0012c598 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0012c688 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012c688 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012c6a8 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
0012c6c4 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012c7d8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012c850 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
0012c868 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012c95c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012c96c 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0012ca44 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0012ca98 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012cadc 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012cb24 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0012cffc 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0012cffc 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0012d040 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0012d040 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0012d054 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0012d074 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0012d200 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
0012d368 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0012db88 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012dc4c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0012dcc4 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0012e008 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0012e05c 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012e05c 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012e0bc 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012e0d8 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012e0d8 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012e128 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
0012e1c4 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0012e1f0 00000034 W MemPool::DelBlock(MemBlock*)
0012e224 0000005c T MemPool::CoalesceRight(MemBlock*)
0012e280 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
0012e39c 00000100 T MemPool::Deallocate(MemChunk const&)
0012e49c 00000020 T MemPool::GetFreeSpace()
0012e4bc 00000124 T __system_allocateHeaps
0012e5e0 00000034 T arm11kSetKProcessId
0012e614 00000028 T arm11kGetCurrentKProcess
0012e63c 00000024 T arm11kMemcpy
0012e660 00000064 T arm11kSvcControlMemory
0012e6c4 00000018 T getKernelObjectPtr
0012e6dc 000000a0 T cfguInit
0012e77c 00000034 T cfguExit
0012e7b0 00000044 T CFGU_GetConfigInfoBlk2
0012e7f4 00000014 T CFGU_GetSystemLanguage
0012e808 000000a8 T fontEnsureMapped
0012e8b0 0000011c T fontGlyphIndexFromCodePoint
0012e9cc 00000074 T fontGetCharWidthInfo
0012ea40 00000050 T srvExit
0012ea90 00000034 T srvRegisterClient
0012eac4 00000064 T srvInit
0012eb28 00000068 T srvGetServiceHandleDirect
0012eb90 00000004 T srvGetServiceHandle
0012eb94 00000034 T srvPublishToSubscriber
0012ebc8 0000000c T __sync_init
0012ebd4 00000018 T __sync_fini
0012ebec 00000018 T LightLock_Init
0012ec04 0000008c T LightLock_Lock
0012ec90 00000034 T LightLock_TryLock
0012ecc4 00000050 T LightLock_Unlock
0012ed14 00000018 T RecursiveLock_Init
0012ed2c 00000030 T RecursiveLock_Lock
0012ed5c 00000044 T RecursiveLock_TryLock
0012eda0 00000034 T RecursiveLock_Unlock
0012edd4 00000030 T LightEvent_Init
0012ee04 00000060 T LightEvent_Clear
0012ee64 00000060 T LightEvent_Pulse
0012eec4 000000b4 T LightEvent_Signal
0012ef78 000000a8 T LightEvent_Wait
0012f020 00000168 T threadCreate
0012f188 0000001c T threadFree
0012f1a4 00000024 T threadJoin
0012f1c8 00000030 T threadGetCurrent
0012f1f8 0000003c T threadExit
0012f234 0000003c t _thread_begin
0012f270 00000088 T acInit
0012f2f8 00000034 T acExit
0012f32c 000000a0 T amInit
0012f3cc 00000034 T amExit
0012f400 00000128 T aptSendCommand
0012f528 0000006c T APT_CheckNew3DS
0012f594 00000048 T APT_GetSharedFont
0012f5dc 00000028 t fsSession
0012f604 00000040 t fsSessionForArchive
0012f644 00000038 T fsExit
0012f67c 00000028 T FSUSER_Initialize
0012f6a4 000000b0 T fsInit
0012f754 00000080 T FSUSER_OpenFile
0012f7d4 00000068 T FSUSER_DeleteFile
0012f83c 000000a4 T FSUSER_RenameFile
0012f8e0 00000070 T FSUSER_CreateDirectory
0012f950 0000006c T FSUSER_OpenDirectory
0012f9bc 00000074 T FSUSER_OpenArchive
0012fa30 00000058 T FSFILE_Read
0012fa88 00000060 T FSFILE_Write
0012fae8 00000038 T FSFILE_GetSize
0012fb20 00000028 T FSFILE_SetSize
0012fb48 0000003c T FSFILE_Close
0012fb84 00000024 T FSFILE_Flush
0012fba8 00000050 T FSDIR_Read
0012fbf8 0000003c T FSDIR_Close
0012fc34 000000e8 t gspEventThreadMain
0012fd1c 00000098 T gspInitEventHandler
0012fdb4 00000040 T gspExitEventHandler
0012fdf4 0000008c T gspExit
0012fe80 0000005c T gspWaitForEvent
0012fedc 00000044 T GSPGPU_FlushDataCache
0012ff20 00000044 T GSPGPU_InvalidateDataCache
0012ff64 00000064 T GSPGPU_RegisterInterruptRelayQueue
0012ffc8 000000dc T gspInit
001300a4 0000002c T GSPGPU_SaveVramSysArea
001300d0 0000002c T GSPGPU_RestoreVramSysArea
001300fc 000000bc T hidExit
001301b8 00000034 T hidCheckSectionUpdateTime
001301ec 0000016c T hidScanInput
00130358 00000010 T hidKeysHeld
00130368 00000010 T hidKeysDown
00130378 00000010 T hidKeysUp
00130388 00000018 T hidTouchRead
001303a0 00000090 T HIDUSER_GetHandles
00130430 00000174 T hidInit
001305a4 00000034 T irrstCheckSectionUpdateTime
001305d8 00000070 T irrstScanInput
00130648 0000001c T irrstKeysHeld
00130664 00000050 T IRRST_GetHandles
001306b4 00000034 T IRRST_Initialize
001306e8 00000124 T irrstInit
0013080c 0000002c T IRRST_Shutdown
00130838 000000a8 T irrstExit
001308e0 0000002c t __ctru_get_reent
0013090c 000000f0 T __system_initSyscalls
001309fc 0000005c T decode_utf16
00130a58 00000138 T decode_utf8
00130b90 00000054 T encode_utf16
00130be4 000000e0 T encode_utf8
00130cc4 000000d4 T utf16_to_utf8
00130d98 000000ac T utf8_to_utf16
00130e44 00000054 T rbtree_find
00130e98 00000010 T rbtree_init
00130ea8 00000174 t do_insert
0013101c 00000008 T rbtree_insert
00131024 00000014 t is_black
00131038 000002c8 T rbtree_remove
00131300 00000094 T rbtree_rotate
00131394 T loadCROHooked
001313b0 T svcControlMemory
001313d0 T svcQueryMemory
00131400 T svcCreateThread
00131420 T svcExitThread
00131428 T svcSleepThread
00131430 T svcSetThreadPriority
00131438 T svcReleaseMutex
00131440 T svcCreateEvent
00131454 T svcSignalEvent
0013145c T svcClearEvent
00131464 T svcMapMemoryBlock
0013146c T svcUnmapMemoryBlock
00131474 T svcCreateAddressArbiter
00131488 T svcArbitrateAddress
001314a0 T svcCloseHandle
001314a8 T svcWaitSynchronization
001314b0 T svcGetSystemTick
001314b8 T svcGetSystemInfo
001314d0 T svcGetProcessInfo
001314e8 T svcConnectToPort
001314fc T svcSendSyncRequest
00131504 T svcOpenProcess
00131518 T svcBreak
00131520 T svcInvalidateProcessDataCache
00131528 T svcFlushProcessDataCache
00131530 T svcControlProcessMemory
00131548 T svcBackdoor
00131550 T svcKernelSetState
00131558 T svcQueryProcessMemory
0013157c 0000004c T Hook::Hook()
0013157c 0000004c T Hook::Hook()
001315c8 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
00131690 00000060 T Hook::Enable()
001316f0 00000060 T Hook::Disable()
00131750 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00131750 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00131778 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00131778 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001317b4 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001317b4 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001317e8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
001317e8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00131824 00000008 T CTRPluginFramework::MessageBox::operator()() const
0013182c 00000014 T CTRPluginFramework::Touch::IsDown()
00131840 00000028 T CTRPluginFramework::Touch::GetPosition()
00131868 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00131868 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00131894 00000018 T CTRPluginFramework::LineReader::~LineReader()
00131894 00000018 T CTRPluginFramework::LineReader::~LineReader()
001318ac 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001319c0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
001319c0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
001319e8 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00131a68 00000048 T CTRPluginFramework::LineWriter::Flush()
00131ab0 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00131ab0 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00131acc 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131b3c 00000018 T CTRPluginFramework::LineWriter::Close()
00131b54 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00131b90 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
00131bb4 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131bd8 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131c74 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00131c74 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00131c78 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
00131c8c 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00131d70 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00131d70 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00131dd0 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
00131dd8 000000ac T CTRPluginFramework::ComboBox::Draw()
00131e84 000000ac T CTRPluginFramework::ComboBox::operator()()
00131f30 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00131f30 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00131f7c 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
00131f98 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00131f98 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00131fe8 00000038 T CTRPluginFramework::ComboBox::Clear()
00132020 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132078 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00132108 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00132108 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0013210c 00000014 T CTRPluginFramework::FloatingButton::Draw()
00132120 00000014 T CTRPluginFramework::FloatingButton::operator()()
00132134 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
00132148 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
00132308 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00132308 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0013234c 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013234c 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132524 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132524 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132694 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0013270c 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
001329c8 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
00132acc 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00132acc 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00132aec 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00132b08 00000094 T CTRPluginFramework::NumericTextBox::Draw()
00132b9c 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
00132bd4 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
00132c3c 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
00132d34 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
00132d44 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
00132d54 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
00132d5c 0000000c T CTRPluginFramework::NumericTextBox::Clear()
00132d68 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00132d68 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00132dd0 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00132e50 00000008 W CTRPluginFramework::Drawable::operator()()
00132e58 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00132e5c 000002e0 T CTRPluginFramework::TextBox::Draw()
0013313c 000000ec T CTRPluginFramework::TextBox::TextBox()
0013313c 000000ec T CTRPluginFramework::TextBox::TextBox()
00133228 0000000c T CTRPluginFramework::TextBox::Open() const
00133234 0000000c T CTRPluginFramework::TextBox::Close() const
00133240 00000008 T CTRPluginFramework::TextBox::IsOpen() const
00133248 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
00133494 0000000c T CTRPluginFramework::TextBox::DrawConst() const
001334a0 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
00133538 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
001335ec 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
001336c4 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
00133700 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
001338e8 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
001338e8 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00133a80 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00133b68 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00133b68 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00133b6c 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00133b80 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
00133c20 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00133c20 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00133c7c 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00133c7c 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00133d1c 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00133d1c 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00133d78 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
00133d80 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
00133ea8 00000088 T CTRPluginFramework::TouchKey::Draw()
00133f30 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00133fc8 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00133fc8 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00134074 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
00134124 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
001341c4 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
001341dc 00000030 T CTRPluginFramework::TouchKeyString::operator()()
0013420c 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0013420c 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00134220 00000024 T CTRPluginFramework::UIContainer::Draw()
00134244 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
00134278 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
0013429c 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
00134374 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
001343b8 000000e4 T CTRPluginFramework::Converter::Converter()
001343b8 000000e4 T CTRPluginFramework::Converter::Converter()
0013449c 00000010 T CTRPluginFramework::Converter::Instance()
001344ac 00000108 T CTRPluginFramework::Converter::_Draw()
001345b4 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
001345b4 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
001345c8 000001e0 T CTRPluginFramework::Converter::operator()()
001347a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
00134820 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00134820 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0013486c 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
00134928 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
00134a10 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00134a74 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
00134d88 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
00134e80 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
001350c8 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
00135348 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00135348 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
0013534c 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
00135368 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
0013537c 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
001353e0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00135458 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
00135518 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001357d4 00000228 T CTRPluginFramework::GuideReader::GuideReader()
001357d4 00000228 T CTRPluginFramework::GuideReader::GuideReader()
001359fc 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
00135e10 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
00135e28 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00135ea8 00000154 T CTRPluginFramework::GuideReader::Draw()
00135ffc 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0013606c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013606c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00136070 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
0013608c 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
001360a0 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
00136104 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
0013617c 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
00136198 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
001361c4 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
00136244 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0013635c 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0013638c 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
001363d0 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
00136414 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
00136448 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
0013649c 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
001364f0 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
00136770 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
001367a8 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
00136d8c 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
00136d8c 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
00136fb8 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
00136ffc 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
001371e4 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0013723c 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
00137324 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001373a4 00000044 T CTRPluginFramework::HexEditor::_Update()
001373e8 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
00137538 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
001377e8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00137860 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
00137860 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013793c 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013793c 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
00137a54 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
00137a90 00000030 T CTRPluginFramework::Menu::~Menu()
00137a90 00000030 T CTRPluginFramework::Menu::~Menu()
00137ac0 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
00137acc 00000008 T CTRPluginFramework::Menu::GetFolder() const
00137ad4 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
00137adc 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
00137b04 000003a4 T CTRPluginFramework::Menu::Draw() const
00137ea8 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
00137f2c 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
00137fb0 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
001381e0 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
00138350 00000068 T CTRPluginFramework::Menu::ShowNote()
001383b8 00000008 T CTRPluginFramework::Menu::CloseNote()
001383c0 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
001383c8 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
00138408 00000044 T CTRPluginFramework::Menu::Pop()
0013844c 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
00138508 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
00138508 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
00138528 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
00138544 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
00138544 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
001385d8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001385d8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00138638 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00138638 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00138698 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0013869c 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
001386a8 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
001386b4 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
001386c0 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
001386cc 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
001386cc 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
001386d0 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
001386d0 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
001386d4 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
001386f0 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013870c 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
00138720 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
00138734 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0013881c 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
00138858 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
001388b0 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
00138964 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
00138a44 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
00138ad0 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
00138afc 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00138b60 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00138bc4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
00138c3c 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
00138c80 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
00138c8c 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
00138fb8 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
001390bc 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0013931c 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
00139420 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
001397fc 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
001398cc 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0013994c 0000006c T CTRPluginFramework::PluginMenuHome::Init()
001399b8 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
00139a3c 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
00139a98 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00139a98 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00139bf0 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
00139c28 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00139c28 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013a344 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013a3bc 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a43c 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a4bc 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013a5c8 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013a5d0 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013a5f4 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013a618 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013a63c 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013a664 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013a68c 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013a6b4 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013a6d4 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0013bb18 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
0013bb7c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0013bb9c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0013bbc0 00000004 t addrMapNodeDestructor(rbtree_node*)
0013bbc4 000000d8 T mappableAlloc
0013bc9c 00000050 T mappableFree
0013bcec 00000008 T envGetHandle
0013bcf4 0000005c t getSysTime
0013bd50 000000fc T __libctru_gtod
0013be4c 00000014 W __appExit
0013be60 00000078 W __libctru_exit
0013bed8 00000050 T rbtree_node_next
0013bf28 00000004 T operator delete[](void*)
0013bf2c 00000004 T operator new[](unsigned int)
0013bf30 0000005c T __cxa_guard_acquire
0013bf8c 0000000c T __cxa_guard_release
0013bf98 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0013bff8 00000070 T __cxa_init_primary_exception
0013c068 00000054 T __cxa_throw
0013c0bc 000000b0 T __cxa_rethrow
0013c16c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013c16c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013c18c 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013c1b8 00000004 T std::exception::~exception()
0013c1b8 00000004 T std::exception::~exception()
0013c1bc 00000004 T std::bad_exception::~bad_exception()
0013c1bc 00000004 T std::bad_exception::~bad_exception()
0013c1c0 0000000c T transaction clone for std::exception::what() const
0013c1c0 0000000c T std::exception::what() const
0013c1cc 0000000c T transaction clone for std::bad_exception::what() const
0013c1cc 0000000c T std::bad_exception::what() const
0013c1d8 00000018 T std::bad_exception::~bad_exception()
0013c1f0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013c1f0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013c210 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013c23c 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0013c2a8 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0013c37c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0013c3c0 0000000c T __cxa_get_globals_fast
0013c3cc 0000000c T __cxa_get_globals
0013c3d8 00000004 T operator delete(void*, unsigned int)
0013c3dc 000000d0 T __cxa_begin_catch
0013c4ac 000000d8 T __cxa_end_catch
0013c584 00000004 T std::type_info::~type_info()
0013c584 00000004 T std::type_info::~type_info()
0013c588 00000008 T std::type_info::__is_pointer_p() const
0013c588 00000008 T std::type_info::__is_function_p() const
0013c590 0000004c T std::type_info::operator==(std::type_info const&) const
0013c5dc 00000008 T __cxa_pure_virtual
0013c5e4 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0013c74c 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
0013c7ac 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0013c88c 0000074c T __gxx_personality_v0
0013cfd8 00000004 T operator delete(void*)
0013cfdc 0000005c T operator new(unsigned int)
0013d038 00000010 T __aeabi_atexit
0013d048 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
0013d118 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
0013d1cc 00000044 T __cxa_allocate_exception
0013d210 00000030 T __cxa_free_exception
0013d240 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0013d280 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0013d2dc 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0013d2f0 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0013d2f0 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0013d310 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0013d33c 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0013d3a4 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0013d3d0 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0013d414 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0013d42c 00000014 T std::__detail::_List_node_base::_M_unhook()
0013d440 0000002c T std::__throw_bad_alloc()
0013d46c 00000040 T std::__throw_logic_error(char const*)
0013d4ac 00000040 T std::__throw_invalid_argument(char const*)
0013d4ec 00000040 T std::__throw_length_error(char const*)
0013d52c 00000040 T std::__throw_out_of_range(char const*)
0013d56c 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0013d5e8 00000038 T std::logic_error::logic_error(char const*)
0013d5e8 00000038 T std::logic_error::logic_error(char const*)
0013d620 00000020 T std::invalid_argument::invalid_argument(char const*)
0013d620 00000020 T std::invalid_argument::invalid_argument(char const*)
0013d640 00000020 T std::length_error::length_error(char const*)
0013d640 00000020 T std::length_error::length_error(char const*)
0013d660 00000020 T std::out_of_range::out_of_range(char const*)
0013d660 00000020 T std::out_of_range::out_of_range(char const*)
0013d680 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0013d704 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0013d708 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0013d7b8 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0013d7b8 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0013d7f8 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0013d84c 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0013d860 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0013d884 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0013d8a8 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d960 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0013da70 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0013dae4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013dae4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013db50 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0013db50 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0013db74 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013dc04 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0013dd18 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0013dd84 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0013ddf0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0013de18 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0013de5c 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0013de74 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0013df78 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
0013dfc0 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0013e248 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0013e280 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e2cc 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0013e32c 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0013e3c0 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e3d0 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e3e0 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0013e40c 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0013e454 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
0013e49c 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0013e544 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0013e554 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0013e5c4 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0013e5f4 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0013e640 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
0013e6f0 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e6f0 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e720 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0013e7d0 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0013e848 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
0013e8b8 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0013e930 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0013ea30 00000014 T std::get_new_handler()
0013ea44 00000034 T __cxxabiv1::__terminate(void (*)())
0013ea78 00000018 T std::terminate()
0013ea90 0000000c T __cxxabiv1::__unexpected(void (*)())
0013ea9c 00000018 T std::unexpected()
0013eab4 00000014 T std::get_terminate()
0013eac8 00000014 T std::get_unexpected()
0013eadc 0000000c T std::bad_alloc::what() const
0013eae8 00000020 T std::bad_alloc::~bad_alloc()
0013eae8 00000020 T std::bad_alloc::~bad_alloc()
0013eb08 0000002c T std::bad_alloc::~bad_alloc()
0013eb34 T __cxa_end_cleanup
0013eb44 00000138 T __cxa_type_match
0013ec7c 000000b4 T __cxa_begin_cleanup
0013ed30 000000b4 T __gnu_end_cleanup
0013ede4 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0013ee54 0000002c T __cxa_call_terminate
0013ee80 0000013c T __cxa_call_unexpected
0013efbc 00000008 T std::logic_error::what() const
0013efc4 00000064 T std::logic_error::~logic_error()
0013efc4 00000064 T std::logic_error::~logic_error()
0013f028 0000001c T std::logic_error::~logic_error()
0013f044 00000020 T std::invalid_argument::~invalid_argument()
0013f044 00000020 T std::invalid_argument::~invalid_argument()
0013f064 00000028 T std::invalid_argument::~invalid_argument()
0013f08c 00000020 T std::length_error::~length_error()
0013f08c 00000020 T std::length_error::~length_error()
0013f0ac 00000028 T std::length_error::~length_error()
0013f0d4 00000020 T std::out_of_range::~out_of_range()
0013f0d4 00000020 T std::out_of_range::~out_of_range()
0013f0f4 00000028 T std::out_of_range::~out_of_range()
0013f120 00000174 T ceil
0013f294 000000b8 T ceilf
0013f350 00000174 T floor
0013f4c4 00000088 T roundf
0013f550 00000020 T log2
0013f570 0000015c T log
0013f6d0 000002c4 T __ieee754_log
0013f994 00000008 T matherr
0013f9a0 00000010 T nan
0013f9b0 0000002c t __aeabi_f2lz
0013f9b0 0000002c T __fixsfdi
0013f9e0 00000050 t __aeabi_f2ulz
0013f9e0 00000050 T __fixunssfdi
0013fa30 00000158 t __udivmoddi4
0013fb88 00000018 t selfrel_offset31
0013fba0 0000008c t search_EIT_table
0013fc2c 00000040 t __gnu_unwind_get_pr_addr
0013fc6c 00000118 t get_eit_entry
0013fd84 00000088 t restore_non_core_regs
0013fe0c 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0013fe20 00000004 t _Unwind_DebugHook
0013fe24 00000068 t unwind_phase2
0013fe8c 00000134 t unwind_phase2_forced
0013ffc0 000000a8 t __gnu_Unwind_RaiseException
00140068 00000024 t __gnu_Unwind_ForcedUnwind
0014008c 00000074 t __gnu_Unwind_Resume
00140100 00000020 t __gnu_Unwind_Resume_or_Rethrow
00140120 00000004 t _Unwind_Complete
00140124 00000018 t _Unwind_DeleteException
0014013c 00000068 t _Unwind_VRS_Get
001401a4 0000002c t _Unwind_GetGR
001401d0 00000068 t _Unwind_VRS_Set
00140238 0000002c t _Unwind_SetGR
00140264 000000c0 t __gnu_Unwind_Backtrace
00140324 0000044c t __gnu_unwind_pr_common
00140770 00000008 T __aeabi_unwind_cpp_pr0
00140778 00000008 W __aeabi_unwind_cpp_pr1
00140780 00000008 W __aeabi_unwind_cpp_pr2
00140788 00000418 t _Unwind_VRS_Pop
00140ba0 00000060 t next_unwind_byte
00140c00 0000002c t _Unwind_GetGR.constprop.0
00140c2c 00000004 t unwind_UCB_from_context
00140c30 000003c8 t __gnu_unwind_execute
00140ff8 00000048 t __gnu_unwind_frame
00141040 00000010 t _Unwind_GetRegionStart
00141050 0000001c t _Unwind_GetLanguageSpecificData
0014106c 00000008 t _Unwind_GetDataRelBase
00141074 00000008 t _Unwind_GetTextRelBase
0014107c 00000010 T ctime
0014108c 00000014 T __cxa_atexit
001410a0 0000000c T __errno
001410ac 00000034 T exit
001410e0 00000040 T __libc_fini_array
00141120 0000007c T __libc_init_array
0014119c 0000001c T isspace
001411b8 0000001c T isxdigit
001411d4 0000001c T localtime
001411f0 00000364 T localtime_r
00141554 00000024 T __locale_mb_cur_max
00141578 00000008 T __locale_ctype_ptr_l
00141580 00000024 T __locale_ctype_ptr
001415a4 00000018 T malloc
001415bc 00000018 T free
001415d4 000007a8 T _malloc_r
00141d7c 000002fc T __utf8_mbtowc
00142078 00000100 T memchr
00142178 000000fc T memcmp
00142274 0000010c T memcpy
00142380 0000013c T memmove
001424bc 00000110 T memset
001425cc 0000000c T __malloc_lock
001425d8 0000000c T __malloc_unlock
001425e4 00000064 T sprintf
00142648 00000008 T __seofread
00142650 000000f0 T strcpy
00142740 00000158 t iso_year_adjust
00142898 00001024 t __strftime
001438bc 00000050 T strftime
0014390c 0000005c T strlen
00143968 000000f8 T strncmp
00143a60 000000d8 T strncpy
00143b38 00000054 t sulp
00143b90 00001464 T _strtod_l
00144ff8 000000b8 T strtof
001450b0 000001bc t _strtol_l.isra.0
0014526c 00000050 T _strtol_r
001452c0 00000260 t _strtoull_l.isra.0
00145520 00000050 T _strtoull_r
00145570 000001d0 t _strtoul_l.isra.0
00145740 00000050 T _strtoul_r
00145790 00000054 T strtoul
001457e4 000074a0 t get_arg
0014cc88 00003e2c T _svfprintf_r
00150ab4 00000038 T time
00150aec 00000218 T __tzcalc_limits
00150d04 0000000c T __tz_lock
00150d10 0000000c T __tz_unlock
00150d1c 00000010 T _tzset_unlocked
00150d2c 0000049c T _tzset_unlocked_r
001511c8 000000a0 T _vsnprintf_r
00151268 00000038 T vsnprintf
001512a0 000000a0 T _wcrtomb_r
00151340 00000020 T _wcsrtombs_r
00151360 000000e8 T __utf8_wctomb
00151448 0000000c T abs
00151454 0000001c T asctime
00151470 00000078 T asctime_r
001514e8 000000f4 T __register_exitproc
001515dc 00000170 T __call_exitprocs
0015174c 000001bc t quorem
00151908 00001224 T _dtoa_r
00152b2c 000000f8 T _malloc_trim_r
00152c24 000002e4 T _free_r
00152f08 00000104 t rshift
0015300c 000007f8 T __gethex
00153804 00000060 T __match
00153864 00000254 T __hexnan
00153ab8 000000c8 T _findenv_r
00153b80 00000018 T _getenv_r
00153b98 0000000c T __gettzinfo
00153ba4 00000280 T gmtime_r
00153e24 0000000c T labs
00153e30 00000008 T __localeconv_l
00153e38 00000024 T _localeconv_r
00153e5c 00000088 T _Balloc
00153ee4 0000001c T _Bfree
00153f00 000000d0 T __multadd
00153fd0 000000e0 T __s2b
001540b0 00000058 T __hi0bits
00154108 0000009c T __lo0bits
001541a4 00000020 T __i2b
001541c4 000001d4 T __multiply
00154398 00000100 T __pow5mult
00154498 000000e8 T __lshift
00154580 0000005c T __mcmp
001545dc 00000168 T __mdiff
00154744 00000078 T __ulp
001547bc 000000d0 T __b2d
0015488c 00000104 T __d2b
00154990 00000084 T __ratio
00154a14 00000088 T __copybits
00154a9c 00000078 T __any_on
00154b14 0000000c T nanf
00154b20 0000009c T frexp
00154bbc 00000064 T siprintf
00154c20 00000074 T siscanf
00154c94 000000c8 T sniprintf
00154d5c 000074a0 t get_arg
0015c1fc 00000188 T __ssprint_r
0015c384 0000295c T _svfiprintf_r
0015ece0 000000dc T _sungetc_r
0015edbc 0000006c T __ssrefill_r
0015ee28 000000c8 T _sfread_r
0015eef0 00001d84 T __ssvfiscanf_r
00160c74 000000a4 T __submore
00160d18 00000170 T _wcsnrtombs_l
00160e88 00000064 T _wcsnrtombs_r
00160eec 00000090 T _calloc_r
00160f7c 0000000c T __env_lock
00160f88 0000000c T __env_unlock
00160f94 00000074 T iswspace
00161008 000001e0 t __jp2uc
001611e8 000000c4 T _jp2uc
001612ac 000000b4 T _mbrtowc_r
00161360 000004d0 T _realloc_r
00161830 000000cc T __sccl
001618fc 00000274 t _strtoll_l.isra.0
00161b70 00000050 T _strtoll_r
00161bc0 0000002c T _gettimeofday_r
00161bec 00000070 T _sbrk_r
00161c5c 00000024 T _exit
00161c80 00000018 T __libc_lock_acquire
00161c98 00000018 T __libc_lock_release
00161cb0 00000018 T __libc_lock_acquire_recursive
00161cc8 00000018 T __libc_lock_release_recursive
00161ce0 00000028 T __getreent
00161d08 T _fini
00161d64 00000030 r ._184
00161d9c 00000058 r CTRPluginFramework::g_OSDPattern
00161df4 00000a00 r font
001627f4 00000038 r CTRPluginFramework::stable
0016282c 00000038 r CTRPluginFramework::ktable
00162864 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
00162880 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
00162894 00000030 r ._184
001628e4 00000038 R vtable for CTRPluginFramework::Search32
0016291c 00000038 R vtable for CTRPluginFramework::Search
00162954 00000005 r CSWTCH.47
0016295c 00000014 R vtable for CTRPluginFramework::ARCode
00162970 0000002d r ._89
001629a0 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
00162a20 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
00162a2c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
00162a34 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
00162a3c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
00162a44 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
00162a60 00000004 R About15_array_length
00162a64 00000384 r About15_array
00162de8 00000004 R AddFavorite25_array_length
00162dec 000009c4 r AddFavorite25_array
001637b0 00000004 R AddFavoriteFilled25_array_length
001637b4 000009c4 r AddFavoriteFilled25_array
00164178 00000004 R CapsLockOn15_array_length
0016417c 00000384 r CapsLockOn15_array
00164500 00000004 R CapsLockOnFilled15_array_length
00164504 00000384 r CapsLockOnFilled15_array
00164888 00000004 R CheckedCheckbox_array_length
0016488c 00000384 r CheckedCheckbox_array
00164c10 00000004 R ClearSymbol15_array_length
00164c14 00000384 r ClearSymbol15_array
00164f98 00000004 R ClearSymbolFilled15_array_length
00164f9c 00000384 r ClearSymbolFilled15_array
00165320 00000004 R Clipboard25_array_length
00165324 000009c4 r Clipboard25_array
00165ce8 00000004 R ClipboardFilled25_array_length
00165cec 000009c4 r ClipboardFilled25_array
001666b0 00000004 R CloseWindow20_array_length
001666b4 00000640 r CloseWindow20_array
00166cf4 00000004 R CloseWindowFilled20_array_length
00166cf8 00000640 r CloseWindowFilled20_array
00167338 00000004 R Controller15_array_length
0016733c 00000384 r Controller15_array
001676c0 00000004 R Cut25_array_length
001676c4 000009c4 r Cut25_array
00168088 00000004 R CutFilled25_array_length
0016808c 000009c4 r CutFilled25_array
00168a50 00000004 R Duplicate25_array_length
00168a54 000009c4 r Duplicate25_array
00169418 00000004 R DuplicateFilled25_array_length
0016941c 000009c4 r DuplicateFilled25_array
00169de0 00000004 R Edit25_array_length
00169de4 000009c4 r Edit25_array
0016a7a8 00000004 R EditFilled25_array_length
0016a7ac 000009c4 r EditFilled25_array
0016b170 00000004 R EnterKey15_array_length
0016b174 00000384 r EnterKey15_array
0016b4f8 00000004 R EnterKeyFilled15_array_length
0016b4fc 00000384 r EnterKeyFilled15_array
0016b880 00000004 R File15_array_length
0016b884 00000384 r File15_array
0016bc08 00000004 R FolderFilled_array_length
0016bc0c 00000384 r FolderFilled_array
0016bf90 00000004 R GameController15_array_length
0016bf94 00000384 r GameController15_array
0016c318 00000004 R GameController25_array_length
0016c31c 000009c4 r GameController25_array
0016cce0 00000004 R GameControllerFilled25_array_length
0016cce4 000009c4 r GameControllerFilled25_array
0016d6a8 00000004 R Grid15_array_length
0016d6ac 00000384 r Grid15_array
0016da30 00000004 R HandCursor15_array_length
0016da34 00000384 r HandCursor15_array
0016ddb8 00000004 R Info25_array_length
0016ddbc 000009c4 r Info25_array
0016e780 00000004 R InfoFilled25_array_length
0016e784 000009c4 r InfoFilled25_array
0016f148 00000004 R Keyboard25_array_length
0016f14c 000009c4 r Keyboard25_array
0016fb10 00000004 R KeyboardFilled25_array_length
0016fb14 000009c4 r KeyboardFilled25_array
001704d8 00000004 R Maintenance15_array_length
001704dc 00000384 r Maintenance15_array
00170860 00000004 R More15_array_length
00170864 00000384 r More15_array
00170be8 00000004 R Plus25_array_length
00170bec 000009c4 r Plus25_array
001715b0 00000004 R PlusFilled25_array_length
001715b4 000009c4 r PlusFilled25_array
00171f78 00000004 R RAM15_array_length
00171f7c 00000384 r RAM15_array
00172300 00000004 R Restart15_array_length
00172304 00000384 r Restart15_array
00172688 00000004 R Rocket40_array_length
0017268c 00001900 r Rocket40_array
00173f8c 00000004 R Save25_array_length
00173f90 000009c4 r Save25_array
00174954 00000004 R Search15_array_length
00174958 00000384 r Search15_array
00174cdc 00000004 R Settings15_array_length
00174ce0 00000384 r Settings15_array
00175064 00000004 R Shutdown15_array_length
00175068 00000384 r Shutdown15_array
001753ec 00000004 R Star15_array_length
001753f0 00000384 r Star15_array
00175774 00000004 R Trash25_array_length
00175778 000009c4 r Trash25_array
0017613c 00000004 R TrashFilled25_array_length
00176140 000009c4 r TrashFilled25_array
00176b04 00000004 R UnCheckedCheckbox_array_length
00176b08 00000384 r UnCheckedCheckbox_array
00176e8c 00000004 R UserManualFilled15_array_length
00176e90 00000384 r UserManualFilled15_array
00177214 0000001c R vtable for CTRPluginFramework::CheckBox
00177230 0000001c R vtable for CTRPluginFramework::ComboBox
0017724c 0000001c R vtable for CTRPluginFramework::FloatingButton
00177268 0000001c R vtable for CTRPluginFramework::NumericTextBox
00177284 0000001c R vtable for CTRPluginFramework::TextBox
001772a0 0000001c R vtable for CTRPluginFramework::TouchKey
001772bc 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
001772dc 00000280 r CTRPluginFramework::_cursorPositions
0017755c 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
00177564 00000048 r CTRPluginFramework::g_ctrpf
001775ac 00000030 r CTRPluginFramework::g_byme
00177a50 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
00177a6c 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
00177bd4 00000014 V vtable for CTRPluginFramework::MenuItem
00177be8 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
00177c04 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
00177c74 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
00177c90 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
00177cac 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
00177cc8 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
00178cf0 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
00178d14 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
00178e94 0000001c V vtable for CTRPluginFramework::MenuEntryTools
00178eb0 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
00178ecc 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
00178f18 0000000c R typeinfo for __gnu_cxx::recursive_init_error
00178f24 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
00178f48 00000014 R vtable for __gnu_cxx::recursive_init_error
00178f80 00000008 R typeinfo for __cxxabiv1::__forced_unwind
00178f88 00000008 R typeinfo for __cxxabiv1::__foreign_exception
00178f90 0000000c R typeinfo for std::bad_exception
00178f9c 00000008 R typeinfo for std::exception
00178fa4 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
00178fc4 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
00178fe8 00000012 R typeinfo name for std::bad_exception
00178ffc 0000000d R typeinfo name for std::exception
0017900c 00000014 R vtable for std::bad_exception
00179020 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0017902c 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
00179054 0000002c R vtable for __cxxabiv1::__si_class_type_info
00179080 00000008 R typeinfo for std::type_info
00179088 0000000d R typeinfo name for std::type_info
00179098 0000000c R typeinfo for __cxxabiv1::__class_type_info
001790a4 00000022 R typeinfo name for __cxxabiv1::__class_type_info
001790c8 0000002c R vtable for __cxxabiv1::__class_type_info
001792dc 0000000c R typeinfo for std::bad_alloc
001792e8 0000000d R typeinfo name for std::bad_alloc
001792f8 00000014 R vtable for std::bad_alloc
0017930c 0000000c R typeinfo for std::logic_error
00179318 0000000c R typeinfo for std::length_error
00179324 0000000c R typeinfo for std::out_of_range
00179330 0000000c R typeinfo for std::invalid_argument
0017933c 00000010 R typeinfo name for std::logic_error
0017934c 00000011 R typeinfo name for std::length_error
00179360 00000011 R typeinfo name for std::out_of_range
00179374 00000015 R typeinfo name for std::invalid_argument
0017938c 00000014 R vtable for std::logic_error
001793a0 00000014 R vtable for std::length_error
001793b4 00000014 R vtable for std::out_of_range
001793c8 00000014 R vtable for std::invalid_argument
001793e0 00000004 R _global_impure_ptr
0017942c 00000060 R __month_lengths
00179518 00000014 r fpi.7439
0017952c 00000014 r fpinan.7475
00179540 00000028 r tinytens
001795ac 00000010 r blanks.8562
001795bc 00000010 r zeroes.8563
001795cc 000000fc R _C_time_locale
00179894 00000015 r day_name.6011
001798ac 00000024 r mon_name.6012
001798d0 00000101 R _ctype_
001799e4 00000100 R __hexdig
00179ae8 00000028 R __mprec_bigtens
00179b10 000000c8 R __mprec_tens
00179bd8 0000000c r p05.7353
00179be4 0000006c R __action_table
00179c50 00000100 R __chclass
00179d50 0000006c R __state_table
00179dbc 00000010 r blanks.8541
00179dcc 00000010 r zeroes.8542
00179ddc 00000022 r basefix.8096
00179e14 000000bc r a1
00179ed0 000000bc r a2
00179f8c 0000005b r a3
00179fe8 00000070 r a6
0017a058 000000a2 r a7
0017a0fc 00000040 r a8
0017a13c 0000172a r b02cf
0017b868 00001a7c r d02f4
0017d550 R __exidx_start
0017d770 R __exidx_end
0017d770 00000001 D CTRPluginFramework::g_keepRunning
0017d774 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0017d778 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0017d77c 00000001 D CTRPluginFramework::PrivColor::_format
0017d780 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0017d784 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0017d788 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
0017d789 00000001 D CTRPluginFramework::SystemImpl::_language
0017d78c 00000004 D g_KProcessPIDOffset
0017d790 00000004 D About15
0017d794 00000004 D AddFavorite25
0017d798 00000004 D AddFavoriteFilled25
0017d79c 00000004 D CapsLockOn15
0017d7a0 00000004 D CapsLockOnFilled15
0017d7a4 00000004 D CheckedCheckbox
0017d7a8 00000004 D ClearSymbol15
0017d7ac 00000004 D ClearSymbolFilled15
0017d7b0 00000004 D Clipboard25
0017d7b4 00000004 D ClipboardFilled25
0017d7b8 00000004 D CloseWindow20
0017d7bc 00000004 D CloseWindowFilled20
0017d7c0 00000004 D Controller15
0017d7c4 00000004 D Cut25
0017d7c8 00000004 D CutFilled25
0017d7cc 00000004 D Duplicate25
0017d7d0 00000004 D DuplicateFilled25
0017d7d4 00000004 D Edit25
0017d7d8 00000004 D EditFilled25
0017d7dc 00000004 D EnterKey15
0017d7e0 00000004 D EnterKeyFilled15
0017d7e4 00000004 D File15
0017d7e8 00000004 D FolderFilled
0017d7ec 00000004 D GameController15
0017d7f0 00000004 D GameController25
0017d7f4 00000004 D GameControllerFilled25
0017d7f8 00000004 D Grid15
0017d7fc 00000004 D HandCursor15
0017d800 00000004 D Info25
0017d804 00000004 D InfoFilled25
0017d808 00000004 D Keyboard25
0017d80c 00000004 D KeyboardFilled25
0017d810 00000004 D Maintenance15
0017d814 00000004 D More15
0017d818 00000004 D Plus25
0017d81c 00000004 D PlusFilled25
0017d820 00000004 D RAM15
0017d824 00000004 D Restart15
0017d828 00000004 D Rocket40
0017d82c 00000004 D Save25
0017d830 00000004 D Search15
0017d834 00000004 D Settings15
0017d838 00000004 D Shutdown15
0017d83c 00000004 D Star15
0017d840 00000004 D Trash25
0017d844 00000004 D TrashFilled25
0017d848 00000004 D UnCheckedCheckbox
0017d84c 00000004 D UserManualFilled15
0017d850 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0017d854 D __dso_handle
0017d858 00000004 D __cxxabiv1::__unexpected_handler
0017d85c 00000004 D __cxxabiv1::__terminate_handler
0017d860 00000001 D __fdlib_version
0017d864 00000004 D _impure_ptr
0017d868 00000460 d impure_data
0017dcc8 0000016c D __global_locale
0017de34 00000408 D __malloc_av_
0017e23c 00000004 D __malloc_sbrk_base
0017e240 00000004 D __malloc_trim_threshold
0017e244 0000000c d __malloc_lock_object
0017e250 00000004 d __tz_lock_object
0017e254 00000008 D _tzname
0017e25c 0000000c D __atexit_lock
0017e268 00000040 d tzinfo
0017e2a8 00000004 D environ
0017e2ac 0000000c d __env_lock_object
0017e2b8 a _DYNAMIC
0017e390 a _GLOBAL_OFFSET_TABLE_
0017e3a8 t __frame_dummy_init_array_entry
0017e3a8 T __init_array_start
0017e3a8 B __preinit_array_end
0017e3a8 B __preinit_array_start
0017e3a8 D __tdata_lma
0017e3a8 D __tdata_lma_end
0017e3a8 D __TMC_END__
0017e3f4 t __do_global_dtors_aux_fini_array_entry
0017e3f4 T __fini_array_start
0017e3f4 T __init_array_end
0017e3f8 T __fini_array_end
0017e3f8 r __rel_dyn_start
00194418 B __c_bss_start
00194418 r __rel_dyn_end
00194418 00000004 B offset
0019441c 00000004 B data32
00194420 00000002 B data16
00194422 00000001 B data8
00194424 00000004 B cmp32
00194428 00000002 B cmp16
0019442c 00000004 B patch_address
00194430 00000050 B CTRPluginFramework::QuickMenu::_instance
00194480 00000008 B CTRPluginFramework::_sdmcArchive
00194488 00000004 B CTRPluginFramework::g_continueGameEvent
0019448c 00000004 B __ctru_heap_size
00194490 00000004 B g_gspEventThreadPriority
00194494 00000004 B CTRPluginFramework::g_keepEvent
00194498 00000004 B g_mainThread
0019449c 00000004 b onLoadCroLock
001944a0 00000038 b g_loadCroHook
001944d8 00000004 B croReturn
001944dc 00000004 B CTRPluginFramework::g_keepThreadHandle
001944e0 00000004 B CTRPluginFramework::g_resumeEvent
001944e8 00004000 b CTRPluginFramework::keepThreadStack
001984e8 00010000 b CTRPluginFramework::threadStack
001a84e8 00000004 B CTRPluginFramework::Color::Black
001a84ec 00000004 B CTRPluginFramework::Color::Blank
001a84f0 00000004 B CTRPluginFramework::Color::Blue
001a84f4 00000004 B CTRPluginFramework::Color::BlackGrey
001a84f8 00000004 B CTRPluginFramework::Color::Brown
001a84fc 00000004 B CTRPluginFramework::Color::Cyan
001a8500 00000004 B CTRPluginFramework::Color::DarkGrey
001a8504 00000004 B CTRPluginFramework::Color::DeepSkyBlue
001a8508 00000004 B CTRPluginFramework::Color::DimGrey
001a850c 00000004 B CTRPluginFramework::Color::DodgerBlue
001a8510 00000004 B CTRPluginFramework::Color::Gainsboro
001a8514 00000004 B CTRPluginFramework::Color::ForestGreen
001a8518 00000004 B CTRPluginFramework::Color::Green
001a851c 00000004 B CTRPluginFramework::Color::Grey
001a8520 00000004 B CTRPluginFramework::Color::LimeGreen
001a8524 00000004 B CTRPluginFramework::Color::Magenta
001a8528 00000004 B CTRPluginFramework::Color::Orange
001a852c 00000004 B CTRPluginFramework::Color::Red
001a8530 00000004 B CTRPluginFramework::Color::Silver
001a8534 00000004 B CTRPluginFramework::Color::SkyBlue
001a8538 00000004 B CTRPluginFramework::Color::Turquoise
001a853c 00000004 B CTRPluginFramework::Color::Yellow
001a8540 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a8548 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a8550 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a8558 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a855c 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a8560 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a8564 00000180 b CTRPluginFramework::g_keyName
001a86e4 00000004 b CTRPluginFramework::g_runningInstance
001a86e8 00000004 B CTRPluginFramework::Controller::_keysDown
001a86ec 00000004 B CTRPluginFramework::Controller::_keysHeld
001a86f0 00000004 B CTRPluginFramework::Controller::_keysReleased
001a86f4 00000018 b CTRPluginFramework::_workingDirectory
001a870c 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
001aa710 00000004 B CTRPluginFramework::System::OnAbort
001aa718 00000008 B CTRPluginFramework::Time::Zero
001aa720 000009c4 b CTRPluginFramework::g_rng
001ab0e8 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
001ab0e9 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
001ab0ea 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
001ab0eb 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
001ab0ec 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
001ab0ed 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
001ab0ee 00000001 B CTRPluginFramework::Preferences::ShowTopFps
001ab0ef 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
001ab0f0 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
001ab0f1 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
001ab0f2 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
001ab0f4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
001ab0f8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
001ab100 00000078 B CTRPluginFramework::Preferences::Settings
001ab178 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
001ab179 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
001ab17a 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
001ab17c 00000004 b CTRPluginFramework::defaultSysFont
001ab180 00000004 B CTRPluginFramework::g_fontAllocated
001ab184 00000004 b CTRPluginFramework::tileData
001ab188 00000004 b CTRPluginFramework::glyph
001ab18c 00000004 B CTRPluginFramework::g_glyphAllocated
001ab190 0000000c B CTRPluginFramework::OSDImpl::RecLock
001ab19c 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
001ab1a8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
001ab1c0 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
001ab1d8 00000038 B CTRPluginFramework::OSDImpl::OSDHook
001ab210 00000004 B CTRPluginFramework::OSDImpl::HookReturn
001ab214 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
001ab21c 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
001ab240 0000000c B CTRPluginFramework::OSDImpl::Callbacks
001ab24c 00000004 b CTRPluginFramework::g_second
001ab250 00000010 b CTRPluginFramework::g_fpsClock
001ab260 00000038 B CTRPluginFramework::OSDHook2
001ab298 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
001ab29c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
001ab29d 00000001 B CTRPluginFramework::OSDImpl::MessColors
001ab2a0 00000001 B CTRPluginFramework::PrivColor::_useClamp
001ab2a4 00000010 B CTRPluginFramework::PrivColor::_clampArea
001ab2b4 00000001 B CTRPluginFramework::Renderer::_target
001ab2b8 00000004 B CTRPluginFramework::Renderer::_screen
001ab2bc 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
001ab2c0 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
001ab2c4 00000004 B CTRPluginFramework::RendererPriv::g_customColor
001ab2c8 00000028 B CTRPluginFramework::Window::BottomWindow
001ab2f0 00000028 B CTRPluginFramework::Window::TopWindow
001ab318 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001ab328 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001ab338 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001ab33c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001ab340 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001ab344 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001ab354 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001ab358 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001ab368 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001ab36c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001ab37c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001ab380 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001ab388 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001ab390 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001ab398 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001ab3a0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001ab3a8 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
001ab3ac 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
001ab3b8 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
001ab3c4 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
001ab3d0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001ab3d8 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001ab3e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001ab3e4 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001ab3f4 00000004 B CTRPluginFramework::MenuItem::_uidCounter
001ab3f8 00000004 b CTRPluginFramework::__pmARinstance
001ab3fc 00000004 b CTRPluginFramework::g_radioId
001ab400 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
001ab404 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
001ab408 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
001ab410 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
001ab414 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
001ab418 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001ab420 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001ab440 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001ab450 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001ab460 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001ab464 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001ab468 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001ab470 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001ab478 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
001ab480 00000004 b CTRPluginFramework::g_mode
001ab484 00000004 b CTRPluginFramework::g_HookMode
001ab488 00000004 B CTRPluginFramework::g_index
001ab48c 00000004 B CTRPluginFramework::g_OpenFileLock
001ab490 00000004 B CTRPluginFramework::g_filenames
001ab494 00000004 b CTRPluginFramework::g_buffer2
001ab498 00000030 b CTRPluginFramework::g_hookExportFile
001ab4c8 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
001ab500 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
001ab504 00000004 b CTRPluginFramework::g_buffer
001ab508 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
001ab50c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001ab510 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001ab518 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001ab520 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001ab528 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001ab530 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001ab538 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
001ab53c 00000010 b CTRPluginFramework::SubMenu::Draw()::background
001ab54c 00000004 B CTRPluginFramework::_pool
001ab550 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
001ab552 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
001ab558 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
001ab55c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
001ab560 00000008 b CTRPluginFramework::Heap::g_heapPool
001ab568 0000000c b sAddrMap
001ab578 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
001ab57c 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
001ab5e0 00000004 B CTRPluginFramework::ProcessImpl::_processID
001ab5e4 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
001ab5e8 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
001ab5ec 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
001ab5f0 00000008 B CTRPluginFramework::ProcessImpl::_processName
001ab5f8 00000008 B CTRPluginFramework::ProcessImpl::_titleID
001ab600 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
001ab604 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
001ab608 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
001ab614 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
001ab618 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
001ab61c 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
001ab620 00000038 b CTRPluginFramework::_topBuf
001ab658 00000004 B CTRPluginFramework::ScreenImpl::Top
001ab65c 00000038 b CTRPluginFramework::_botBuf
001ab694 00000004 B CTRPluginFramework::ScreenImpl::Bottom
001ab698 00000001 B CTRPluginFramework::SystemImpl::_isInit
001ab699 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
001ab69c 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
001ab6a0 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
001ab6a4 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
001ab6a8 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
001ab6ac 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
001ab6b0 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
001ab6b4 0000000c B CTRPluginFramework::g_codeTypes
001ab6c0 00000001 b CTRPluginFramework::g_condAgainstData
001ab6c1 00000001 b CTRPluginFramework::g_newCondDataToggle
001ab6c4 00000004 b CTRPluginFramework::__arCodeEditor
001ab6c8 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001ab6cc 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001ab6d8 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
001ab6dc 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001ab6e0 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001ab6ec 00000001 B CTRPluginFramework::g_heapError
001ab6f0 00000004 b cfguRefCount
001ab6f4 00000004 b cfguHandle
001ab6f8 00000004 b sharedFontAddr
001ab6fc 00000004 b srvRefCount
001ab700 00000004 b srv2Handle
001ab704 00000004 b arbiter
001ab708 00000004 b acRefCount
001ab70c 00000004 b acHandle
001ab710 00000004 b amRefCount
001ab714 00000004 b amHandle
001ab718 0000000c b aptFirstHook
001ab724 00000004 b aptLockHandle
001ab728 00000004 b serviceName.7503
001ab72c 00000004 b aptMessageFunc
001ab730 00000004 b aptMessageFuncData
001ab734 0000000c b aptEvents
001ab740 00000001 b aptHomeButtonState
001ab744 00000004 b aptRefCount
001ab748 00000008 b aptSleepEvent
001ab750 00000004 b aptEventHandlerThread
001ab754 00000001 b flagInit.7855
001ab755 00000001 b flagValue.7856
001ab758 00001000 b aptParameters
001ac758 00000004 b fsuHandle
001ac760 00000080 b fsExemptArchives
001ac7e0 00000004 b fsuRefCount
001ac7e4 00000001 B fs
001ac7e8 00000004 b gspEventData
001ac7ec 00000038 b gspEvents
001ac824 0000001c b gspEventCounts
001ac840 00000001 b gspRunEvents
001ac844 00000004 b gspRefCount
001ac848 00000004 b gfxSharedMemory
001ac84c 00000001 b gfxThreadID
001ac84d 00001000 b gspThreadEventStack
001ad850 00000004 b hidRefCount
001ad854 00000004 b kOld
001ad858 00000004 b kHeld
001ad85c 00000004 b cPos
001ad860 00000004 b tPos
001ad864 00000006 b aVec
001ad86a 00000006 b gRate
001ad870 00000004 b kDown
001ad874 00000004 b kUp
001ad878 00000004 b irrstRefCount
001ad87c 00000004 b kHeld
001ad880 00000004 b csPos
001ad884 00000004 B _tls_size
001ad888 b saved_stack
001ad890 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001ad894 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001ad8ac 00000004 b CTRPluginFramework::__converter
001ad8b0 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
001ad8b4 00000010 b CTRPluginFramework::GuideReader::Draw()::background
001ad8c8 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001ad8d0 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001ad8d8 00000004 B CTRPluginFramework::__g_hexEditor
001ad8dc 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001ad8e0 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001ad8f0 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
001ad8f8 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
001ad8fc 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001ad900 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001ad908 00000004 b CTRPluginFramework::g_ctrpfString
001ad90c 00000004 b CTRPluginFramework::g_bymeString
001ad910 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001ad918 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001ad920 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001ad928 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001ad930 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
001ad934 00000004 B CTRPluginFramework::ARHandler::ActiveData
001ad938 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
001ad93c 00000008 B CTRPluginFramework::ARHandler::Offset
001ad944 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
001ad948 00000010 B CTRPluginFramework::ARHandler::Data
001ad958 00000008 B CTRPluginFramework::ARHandler::Storage
001ad960 00000001 b CTRPluginFramework::ToggleFloat
001ad964 00000008 b sMappablePool
001ad96c 0000000c b sAddrMap
001ad978 b completed.7759
001ad97c b object.7764
001ad994 0000000c b eh_globals
001ad9a0 00000010 b (anonymous namespace)::emergency_pool
001ad9b0 00000010 V std::string::_Rep::_S_empty_rep_storage
001ad9c0 00000004 b (anonymous namespace)::__new_handler
001ad9c4 00000028 B __malloc_current_mallinfo
001ad9ec 00000004 B __malloc_max_sbrked_mem
001ad9f0 00000004 B __malloc_max_total_mem
001ad9f4 00000004 B __malloc_top_pad
001ad9f8 0000000b b __tzname_dst
001ada04 0000000b b __tzname_std
001ada10 00000004 b prev_tzenv
001ada14 00000004 B _daylight
001ada18 00000004 B _timezone
001ada1c 00000004 b initial_env
001ada20 00000004 b heap_start.7089
001ada24 00000004 B fake_heap_end
001ada28 00000004 B fake_heap_start
001ada2c 00000038 B __syscalls
001ada64 00000004 B g_KProcessHandleDataOffset
001ada68 00000080 B g_kernelParams
001adae8 00000004 B g_sharedFont
001adaec 00000004 B charPerSheet
001adaf0 00000004 B gspEvent
001adaf4 00000004 B gspGpuHandle
001adaf8 00000004 B gspSharedMemHandle
001adafc 00000004 B gspThreadEventHandle
001adb00 00000004 B hidMemHandle
001adb04 00000004 B hidHandle
001adb08 00000014 B hidEvents
001adb1c 00000004 B hidSharedMem
001adb20 00000004 B irrstMemHandle
001adb24 00000004 B irrstEvent
001adb28 00000004 B irrstHandle
001adb2c 00000004 B irrstSharedMem
001adb30 00000004 B __ctru_linear_heap
001adb34 00000004 B __tmp
001adb38 00000004 B __ctru_linear_heap_size
001adb3c 00000004 B __system_retAddr
001adb40 00000004 B __ctru_heap
001adb44 B __c_bss_end
001adb44 A __end__
001adb44 B __tls_end
001adb44 B __tls_start
