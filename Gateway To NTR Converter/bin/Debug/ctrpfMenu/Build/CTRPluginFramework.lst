         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 000000b0 t CTRPluginFramework::GetRacePointer() [clone .part.0]
001010b8 0000008c T CTRPluginFramework::IsInRace()
00101144 00000040 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
00101184 00000040 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
001011c4 0000003c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
00101200 0000003c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
0010123c 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
00101240 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.15]
001012e0 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
001012e4 0000089c T CTRPluginFramework::main()
00101b80 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00101b80 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00101bb0 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00101bb0 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00101c50 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
00101c50 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
00101d00 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00101d00 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00101dcc 000002a8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00102074 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
001020a8 00000424 T CTRPluginFramework::KeepThreadMain(void*)
001024cc 00000038 T onLoadCro
00102504 00000164 T CTRPluginFramework::Initialize()
00102668 00000098 T CTRPluginFramework::ThreadExit()
00102700 00000060 T abort
00102760 00000024 T CTRPluginFramework::ThreadInit(void*)
00102784 00000068 T LaunchMainThread
001027ec 0000000c t _GLOBAL__sub_I_g_mainThread
001027f8 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
001027f8 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00102810 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00102810 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00102830 00000008 T CTRPluginFramework::Color::ToU32() const
00102838 00000120 T CTRPluginFramework::Color::Fade(double)
00102958 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
00102998 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
00102a18 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
00102bf0 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
00102dbc 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
00102e3c 00000004 T CTRPluginFramework::OSD::TryLock()
00102e40 00000004 T CTRPluginFramework::OSD::Unlock()
00102e44 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00102f08 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
00102fb0 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00102fb0 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00103000 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00103000 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00103068 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00103068 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00103094 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
0010309c 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
001030a4 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001030c0 00000028 T CTRPluginFramework::Keyboard::Open() const
001030e8 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
00103160 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
00103210 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00103264 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
001032cc 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
00103368 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001033f4 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0010349c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00103584 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00103610 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
001036b8 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
001037a0 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0010382c 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
001038d4 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
001039bc 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001039bc 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00103a08 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00103a08 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00103a38 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
00103a40 00000028 t __tcf_0
00103a68 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
00103ae0 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
00103ae8 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
00103b68 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
00103be4 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
00103cbc 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
00103cbc 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
00103cd8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00103cd8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00103d18 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
00103d28 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
00103de8 00000020 T CTRPluginFramework::HotkeyManager::Count()
00103e08 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
00103f3c 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
00104064 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104064 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001040a4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
001040a4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
001040cc 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
001040dc 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuFolder*) const
001040ec 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001040ec 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00104158 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
0010416c 00000038 T CTRPluginFramework::PluginMenu::Run() const
001041a4 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
001041ac 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
001041bc 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
001041c8 00000030 t CTRPluginFramework::GetCurrentTime()
001041f8 00000014 T CTRPluginFramework::Clock::Clock()
001041f8 00000014 T CTRPluginFramework::Clock::Clock()
0010420c 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
00104244 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
00104274 00000044 T CTRPluginFramework::Clock::Restart()
001042b8 00000014 T CTRPluginFramework::Controller::GetKeysDown()
001042cc 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
001042e8 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
00104304 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
00104320 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0010433c 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
00104368 0000002c T CTRPluginFramework::Controller::Update()
00104394 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
00104404 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
0010452c 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
001045b0 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
0010462c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
001046a4 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
00104708 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
00104798 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001048ac 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00104920 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001049ac 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104a24 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104a9c 00000034 T CTRPluginFramework::Directory::Close() const
00104ad0 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00104bd0 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
00104be4 00000008 T CTRPluginFramework::Directory::IsOpen() const
00104bec 0000002c T CTRPluginFramework::Directory::Directory()
00104bec 0000002c T CTRPluginFramework::Directory::Directory()
00104c18 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00104c18 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00104c4c 0000002c T CTRPluginFramework::Directory::~Directory()
00104c4c 0000002c T CTRPluginFramework::Directory::~Directory()
00104c78 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
00104d78 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104dbc 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
00104e08 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
00104f8c 0000010c T CTRPluginFramework::Directory::_List() const
00105098 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00105200 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00105360 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
00105398 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105478 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001054d8 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105560 0000005c T CTRPluginFramework::File::Close() const
001055bc 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00105698 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
00105748 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
00105830 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0010585c 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0010590c 00000008 T CTRPluginFramework::File::Tell() const
00105914 00000010 T CTRPluginFramework::File::Rewind() const
00105924 00000008 T CTRPluginFramework::File::Flush() const
0010592c 00000044 T CTRPluginFramework::File::GetSize() const
00105970 00000008 T CTRPluginFramework::File::IsOpen() const
00105978 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0010598c 00000034 T CTRPluginFramework::File::File()
0010598c 00000034 T CTRPluginFramework::File::File()
001059c0 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
001059c0 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00105a00 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
00105b00 00000010 T CTRPluginFramework::Process::GetHandle()
00105b10 00000010 T CTRPluginFramework::Process::GetTitleID()
00105b20 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00105b80 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00105bb8 00000024 T CTRPluginFramework::Process::GetTextSize()
00105bdc 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
00105c38 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
00105cac 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
00105d54 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
00105e0c 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
00105ebc 00000028 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
00105ee4 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
00105f24 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
00105f50 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
00105f74 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
00105fbc 00000010 T CTRPluginFramework::System::IsNew3DS()
00105fcc 00000010 T CTRPluginFramework::System::IsLoaderNTR()
00105fdc 00000014 T CTRPluginFramework::Time::Time()
00105fdc 00000014 T CTRPluginFramework::Time::Time()
00105ff0 00000020 T CTRPluginFramework::Time::AsSeconds() const
00106010 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
00106028 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
00106030 00000028 T CTRPluginFramework::Seconds(float)
00106058 00000010 T CTRPluginFramework::Milliseconds(int)
00106068 00000008 T CTRPluginFramework::Microseconds(long long)
00106070 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
00106084 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
00106098 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
001060ac 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
001060cc 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
00106118 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
00106130 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
00106194 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
00106208 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
00106264 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
001062e4 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106398 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001064d8 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
00106510 0000001c T CTRPluginFramework::InitializeRandomEngine()
0010652c 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00106638 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
001066a0 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
001066bc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
00106734 0000001c W CTRPluginFramework::File::~File()
00106734 0000001c W CTRPluginFramework::File::~File()
00106750 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106750 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001067f0 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
001067f0 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
00106850 00000010 W CTRPluginFramework::BMPImage::DataClear()
00106860 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
00106994 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
001069c0 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
00106af8 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
00106d90 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
00106e60 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
00106f18 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
00106fd0 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0010702c 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
001071c0 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
00107240 000001ec T CTRPluginFramework::Preferences::WriteSettings()
0010742c 00000004 T CTRPluginFramework::Preferences::Initialize()
00107430 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
001074a8 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
001074b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
00107528 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
00107534 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
00107540 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
00107640 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
00107640 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
00107670 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0010773c 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
00107850 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
00107a54 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
00107aac 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
00107f80 00000010 T CTRPluginFramework::Glyph::Width() const
00107f90 00000060 T CTRPluginFramework::Font::Initialize()
00107ff0 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
00108344 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0010864c 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
00108740 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
001087a8 00000020 T CTRPluginFramework::Font::GetGlyph(char)
001087c8 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
001087c8 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
001087f4 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
001087f4 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
00108814 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
001088cc 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
00108920 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
00108920 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
001089bc 0000000c T CTRPluginFramework::OSDImpl::Lock()
001089c8 0000001c T CTRPluginFramework::OSDImpl::TryLock()
001089e4 0000000c T CTRPluginFramework::OSDImpl::Unlock()
001089f0 000000e4 T CTRPluginFramework::OSDImpl::Draw()
00108ad4 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
00108bac 000001b8 T CTRPluginFramework::InstallOSD()
00108d64 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
00108d8c 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
00108e6c 00000108 T CTRPluginFramework::OSDImpl::Update()
00108f74 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0010958c 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
001095f4 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
00109658 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
00109684 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
001096a8 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
001096e0 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
00109718 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
00109748 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
00109770 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
00109790 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
001097cc 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
00109814 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
00109858 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0010995c 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
00109998 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
00109a08 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109a8c 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109b04 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109b9c 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109c40 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109ce0 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
00109d00 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
00109d3c 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
00109fb4 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
0010a0d4 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
0010a0f0 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
0010a134 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0010a1dc 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
0010a284 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0010a344 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0010a3d8 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0010a480 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010a4d4 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010a4d4 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010a518 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0010a56c 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0010a700 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0010a7b0 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0010a7f8 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010ae84 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010aec0 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010b000 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010b144 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010b20c 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010b3d0 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010b400 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010b530 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010b604 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010b750 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010b854 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010b9a8 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0010bb40 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0010bd2c 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0010bd9c 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0010be08 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0010be2c 00000028 T CTRPluginFramework::Window::~Window()
0010be2c 00000028 T CTRPluginFramework::Window::~Window()
0010be54 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010be54 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010be58 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0010be74 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010be88 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
0010beec 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010beec 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010bfb4 00000064 T CTRPluginFramework::Window::Draw() const
0010c018 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0010c0f0 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0010c108 00000018 T CTRPluginFramework::Window::MustClose() const
0010c120 00000014 T CTRPluginFramework::Window::Close() const
0010c134 00000004 T CTRPluginFramework::Window::GetRect() const
0010c138 0000002c T CTRPluginFramework::Window::Initialize()
0010c164 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010c1e4 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0010c28c 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0010c43c 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0010c468 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0010c4a4 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0010c4e0 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0010c51c 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0010c558 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0010c594 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0010c5c0 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0010c5fc 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0010c638 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0010c674 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0010c6b0 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0010c6dc 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0010c718 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0010c744 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0010c770 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0010c79c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
0010c7d8 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0010c804 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0010c840 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0010c86c 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0010c8a0 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0010c8dc 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0010c908 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0010c944 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0010c970 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0010c99c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0010c9c8 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0010c9f4 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0010ca20 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0010ca4c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0010ca78 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0010caa4 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0010cae0 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
0010cafc 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010cafc 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010cb00 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010cb14 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
0010cb78 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
0010cbfc 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
0010ccc4 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0010cd54 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0010ce70 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
0010cee0 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
0010cf80 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
0010cfac 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010cfac 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010cfdc 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
0010d0b0 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
0010d0ec 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010d0ec 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010d208 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010d288 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
0010d300 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
0010d3a4 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010d3a4 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010d4e8 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010d4e8 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010d630 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0010d630 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0010d694 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0010d69c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0010d6a4 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0010d6ac 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0010d6b4 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
0010d6bc 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0010d820 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0010dcb4 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0010dd18 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0010dda8 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0010de28 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0010deac 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0010e00c 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
0010e28c 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0010e808 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0010e870 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0010e8c0 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0010e930 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0010e938 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0010e938 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0010e97c 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
0010e9ac 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0010ea84 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0010ec50 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0010ec7c 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0010ec7c 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0010eca4 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
0010edc0 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
0010ee50 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0010f744 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
00110038 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0011137c 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
00112abc 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
00112b00 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
00112d54 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
00112da4 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
00112e0c 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
00112e54 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
00113178 00000250 T CTRPluginFramework::KeyboardImpl::Run()
001133c8 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
00113440 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00113448 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0011345c 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
0011345c 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00113484 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00113484 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
001134ac 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
001134c8 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
001134e4 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
001135fc 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
001135fc 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
001136d4 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
001136d4 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
001137b0 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
001137b8 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
001137c4 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
001137cc 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
001137f0 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
00113820 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0011383c 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
001138a4 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001138a4 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00113970 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0011398c 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011398c 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00113a48 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00113a48 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00113b08 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
00113b1c 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
00113b6c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
00113b84 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
00113ba8 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
00113bb8 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
00113bdc 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
00113cb4 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
00113d14 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
00113d24 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
00113d34 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
00113d44 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00113d44 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00113d48 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00113d48 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00113d4c 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00113d68 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00113d84 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00113d98 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00113dac 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
00113dd4 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00113e38 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00113e9c 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00113ec4 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
00113ee8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
00113f60 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00113fcc 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
001140a0 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
00114140 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00114140 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
001143a8 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
001143bc 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
00114414 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00114468 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
00114588 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00114588 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
001145c4 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
00114738 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001147b8 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00114838 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
00114998 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
00114a40 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00114bc4 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
00114d4c 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
00114d58 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
00114edc 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
00114f20 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00114f50 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
00115024 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
001150ac 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00115220 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
00115290 00000030 W CTRPluginFramework::ARCode::~ARCode()
00115290 00000030 W CTRPluginFramework::ARCode::~ARCode()
001152c0 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
00115404 0000001c W CTRPluginFramework::ARCode::~ARCode()
00115420 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
00115478 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00115478 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
001154a4 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
001154b0 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
001154bc 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
001155d8 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
00115614 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00115620 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
0011562c 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
0011564c 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
00115724 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
001158c0 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
00115914 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
00115a74 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
00115a8c 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
00115bb0 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
00115c88 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
00115e44 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
00115f1c 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
00115fa0 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
001161b4 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
001163b8 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
001165bc 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
001167d0 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
00116828 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011689c 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
00116910 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00116968 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
001169f0 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
001169fc 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
001169fc 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00116a24 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00116a40 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
00116ad4 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00116ad4 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00116afc 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00116b18 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00116b18 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00116b40 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00116b5c 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
00116b5c 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
00116b84 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
00116ba0 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
00116ba0 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
00116bc0 00000030 W CTRPluginFramework::TextBox::~TextBox()
00116bc0 00000030 W CTRPluginFramework::TextBox::~TextBox()
00116bf0 0000001c W CTRPluginFramework::TextBox::~TextBox()
00116c0c 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00116c0c 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00116cfc 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
00116d04 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
00116d04 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
00116d98 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
00116db8 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
00116f44 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
00116f64 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
00116f80 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
00116f9c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
00116fa4 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
00116fac 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
00116fac 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
00116fcc 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
001170c0 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
0011781c 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
00117874 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
001178a4 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
00117968 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0011799c 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
00117acc 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
00117c08 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
00117ccc 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00117dd4 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
00117dd4 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
00117e3c 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
00117f38 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
00118078 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00118210 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00118290 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00118304 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00118378 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001183f8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
00118470 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
001184b4 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
001185f0 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
00118658 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
001187c4 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
00118814 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
001188c0 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
00118d8c 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
00118dfc 000000f4 t CTRPluginFramework::ClearSearchFolder()
00118ef0 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00118ef0 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00119048 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
001190a4 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
001190a4 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
001196e4 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
00119718 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
00119938 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
00119960 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
001199c8 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
001199f8 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
00119acc 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
00119b78 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
00119bb8 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
00119e24 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011a1ac 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0011a288 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011a2c0 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0011a53c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0011a550 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0011a564 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0011a578 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0011a68c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0011a690 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0011a694 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0011a6ac 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0011a6c4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0011a6dc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0011a6f4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0011a70c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0011a724 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0011a73c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0011a754 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0011a76c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
0011a7e4 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0011a848 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011a968 0000005c t CTRPluginFramework::Reboot()
0011a9c4 00000064 t CTRPluginFramework::Shutdown()
0011aa28 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011ab20 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011ac60 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011ae28 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011b01c 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011b818 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011b818 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011b96c 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0011ba78 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0011bb1c 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0011bb5c 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0011bb98 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0011bbd4 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011bcdc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0011bd64 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
0011be04 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0011be80 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0011bf34 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0011c0c0 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0011c108 0000014c T CTRPluginFramework::SearchMenu::_Export()
0011c254 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0011c3b0 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
0011c55c 00000030 W std::__cxx11::to_string(unsigned long)
0011c58c 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011c610 00000584 T CTRPluginFramework::SearchMenu::Draw()
0011cb94 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011cb94 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011cc48 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0011cc78 00000230 T CTRPluginFramework::SearchMenu::Update()
0011cea8 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011d3b4 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
0011d418 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011d418 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011d4ac 0000001c T CTRPluginFramework::SubMenu::operator()()
0011d4c8 00000214 T CTRPluginFramework::SubMenu::Draw()
0011d6dc 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0011d798 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0011d7a0 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0011d7bc 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011d954 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011d99c 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
0011da60 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
0011db20 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
0011db5c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
0011dbd4 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
0011de74 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
0011e130 00000040 W CTRPluginFramework::Search::~Search()
0011e130 00000040 W CTRPluginFramework::Search::~Search()
0011e170 00000044 T CTRPluginFramework::Search32::~Search32()
0011e170 00000044 T CTRPluginFramework::Search32::~Search32()
0011e1b4 0000001c T CTRPluginFramework::Search32::~Search32()
0011e1d0 0000001c W CTRPluginFramework::Search::~Search()
0011e1ec 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0011e1ec 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0011e414 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011e414 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011e434 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0011e434 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0011e490 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0011e5c8 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0011e610 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0011e754 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0011e898 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011e8dc 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0011e908 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0011e9f4 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0011ea28 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0011ea5c 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0011eb68 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0011ebb0 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0011eec8 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011f128 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011f3a0 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011f600 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0011f634 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011f958 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00120184 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00120a50 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001212fc 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001220ac 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00122c60 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123354 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123734 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123ed0 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124314 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012475c 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124ba0 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001251d0 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125a8c 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012634c 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126c08 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127858 00000044 T CTRPluginFramework::Search::UpdateProgress()
0012789c 00000194 T CTRPluginFramework::Search::CheckNextRegion()
00127a30 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
00127aa8 00000008 T CTRPluginFramework::Search::GetHeader() const
00127ab0 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
00127b08 0000000c T CTRPluginFramework::Search::GetType() const
00127b14 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
00127b2c 00000070 T CTRPluginFramework::Search::WriteHeader()
00127b9c 00000058 T CTRPluginFramework::Search::WriteResults()
00127bf4 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
00127c40 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
00127e60 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
00127e60 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
001280a0 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
00128178 0000008c T CTRPluginFramework::Search::CreateIndexTable()
00128204 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00128204 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001283ac 00000080 T CTRPluginFramework::Search::Cancel()
0012842c 00000118 T CTRPluginFramework::Search::ExecuteSearch()
00128544 00000090 T CTRPluginFramework::EventManager::EventManager()
00128544 00000090 T CTRPluginFramework::EventManager::EventManager()
001285d4 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0012873c 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
00128780 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
00128a0c 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
00128b10 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
00128b18 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00128b3c 00000004 t addrMapNodeDestructor(rbtree_node*)
00128b40 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
00128c50 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
00128c58 00000050 T CTRPluginFramework::Heap::Free(void*)
00128ca8 0000000c T CTRPluginFramework::Heap::SpaceFree()
00128cb4 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
00128ddc 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
00128e28 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
00128e40 00000018 T IsPaused
00128e58 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
00128fe0 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
00129138 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
00129198 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
001291b0 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
001291b0 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
001291e0 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
00129240 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
001292e8 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
00129350 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
00129404 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
001294bc 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
001294c4 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
00129520 00000118 T CTRPluginFramework::ScreenImpl::Flush()
00129638 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
00129750 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
001297a8 00000078 T CTRPluginFramework::ScreenImpl::Clean()
00129820 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
00129894 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0012989c 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
001298a4 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
001298ac 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
001298c8 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
001298e4 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
00129938 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
00129968 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
001299c0 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
00129a34 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
00129b24 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
00129b34 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
00129b44 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
00129b6c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
00129b6c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
00129b8c 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
00129c14 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
00129c14 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
00129d4c 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00129e50 0000006c T CTRPluginFramework::ARCode::Update()
00129ebc 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
00129ebc 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
00129f80 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
00129f80 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
00129fc0 00000040 T CTRPluginFramework::ARCodeContext::Update()
0012a000 00000048 T CTRPluginFramework::ARCodeContext::Clear()
0012a048 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0012a0bc 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0012a11c 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0012a1e8 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
0012a1e8 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
0012a1f4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012a27c 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0012a2d8 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
0012aa48 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012aa48 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012aac8 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012aac8 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012aac8 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012aac8 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012ab18 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012b628 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012b628 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012b7c8 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0012baac 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
0012bac8 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0012bb50 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0012bb88 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012bd0c 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012bd50 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0012bdb4 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0012bde0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012bde0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012be08 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0012be54 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0012beb8 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0012bf74 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0012c29c 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0012c75c 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0012cbc4 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0012d080 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0012d170 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012d170 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012d190 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
0012d1ac 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012d2c0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012d338 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
0012d350 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012d444 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012d454 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0012d52c 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0012d580 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012d5c4 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012d60c 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0012dae4 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0012dae4 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0012db28 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0012db28 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0012db3c 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0012db5c 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0012dce8 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
0012de50 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0012e670 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012e734 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0012e7ac 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0012eaf0 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0012eb44 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012eb44 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012eba4 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012ebc0 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ebc0 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ec10 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
0012ecac 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0012ecd8 00000034 W MemPool::DelBlock(MemBlock*)
0012ed0c 0000005c T MemPool::CoalesceRight(MemBlock*)
0012ed68 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
0012ee84 00000100 T MemPool::Deallocate(MemChunk const&)
0012ef84 00000020 T MemPool::GetFreeSpace()
0012efa4 00000124 T __system_allocateHeaps
0012f0c8 00000034 T arm11kSetKProcessId
0012f0fc 00000028 T arm11kGetCurrentKProcess
0012f124 00000024 T arm11kMemcpy
0012f148 00000064 T arm11kSvcControlMemory
0012f1ac 00000018 T getKernelObjectPtr
0012f1c4 000000a0 T cfguInit
0012f264 00000034 T cfguExit
0012f298 00000044 T CFGU_GetConfigInfoBlk2
0012f2dc 00000014 T CFGU_GetSystemLanguage
0012f2f0 000000a8 T fontEnsureMapped
0012f398 0000011c T fontGlyphIndexFromCodePoint
0012f4b4 00000074 T fontGetCharWidthInfo
0012f528 00000050 T srvExit
0012f578 00000034 T srvRegisterClient
0012f5ac 00000064 T srvInit
0012f610 00000068 T srvGetServiceHandleDirect
0012f678 00000004 T srvGetServiceHandle
0012f67c 00000034 T srvPublishToSubscriber
0012f6b0 0000000c T __sync_init
0012f6bc 00000018 T __sync_fini
0012f6d4 00000018 T LightLock_Init
0012f6ec 0000008c T LightLock_Lock
0012f778 00000034 T LightLock_TryLock
0012f7ac 00000050 T LightLock_Unlock
0012f7fc 00000018 T RecursiveLock_Init
0012f814 00000030 T RecursiveLock_Lock
0012f844 00000044 T RecursiveLock_TryLock
0012f888 00000034 T RecursiveLock_Unlock
0012f8bc 00000030 T LightEvent_Init
0012f8ec 00000060 T LightEvent_Clear
0012f94c 00000060 T LightEvent_Pulse
0012f9ac 000000b4 T LightEvent_Signal
0012fa60 000000a8 T LightEvent_Wait
0012fb08 00000168 T threadCreate
0012fc70 0000001c T threadFree
0012fc8c 00000024 T threadJoin
0012fcb0 00000030 T threadGetCurrent
0012fce0 0000003c T threadExit
0012fd1c 0000003c t _thread_begin
0012fd58 00000088 T acInit
0012fde0 00000034 T acExit
0012fe14 000000a0 T amInit
0012feb4 00000034 T amExit
0012fee8 00000128 T aptSendCommand
00130010 0000006c T APT_CheckNew3DS
0013007c 00000048 T APT_GetSharedFont
001300c4 00000028 t fsSession
001300ec 00000040 t fsSessionForArchive
0013012c 00000038 T fsExit
00130164 00000028 T FSUSER_Initialize
0013018c 000000b0 T fsInit
0013023c 00000080 T FSUSER_OpenFile
001302bc 00000068 T FSUSER_DeleteFile
00130324 000000a4 T FSUSER_RenameFile
001303c8 00000070 T FSUSER_CreateDirectory
00130438 0000006c T FSUSER_OpenDirectory
001304a4 00000074 T FSUSER_OpenArchive
00130518 00000058 T FSFILE_Read
00130570 00000060 T FSFILE_Write
001305d0 00000038 T FSFILE_GetSize
00130608 00000028 T FSFILE_SetSize
00130630 0000003c T FSFILE_Close
0013066c 00000024 T FSFILE_Flush
00130690 00000050 T FSDIR_Read
001306e0 0000003c T FSDIR_Close
0013071c 000000e8 t gspEventThreadMain
00130804 00000098 T gspInitEventHandler
0013089c 00000040 T gspExitEventHandler
001308dc 0000008c T gspExit
00130968 0000005c T gspWaitForEvent
001309c4 00000044 T GSPGPU_FlushDataCache
00130a08 00000044 T GSPGPU_InvalidateDataCache
00130a4c 00000064 T GSPGPU_RegisterInterruptRelayQueue
00130ab0 000000dc T gspInit
00130b8c 0000002c T GSPGPU_SaveVramSysArea
00130bb8 0000002c T GSPGPU_RestoreVramSysArea
00130be4 000000bc T hidExit
00130ca0 00000034 T hidCheckSectionUpdateTime
00130cd4 0000016c T hidScanInput
00130e40 00000010 T hidKeysHeld
00130e50 00000010 T hidKeysDown
00130e60 00000010 T hidKeysUp
00130e70 00000018 T hidTouchRead
00130e88 00000090 T HIDUSER_GetHandles
00130f18 00000174 T hidInit
0013108c 00000034 T irrstCheckSectionUpdateTime
001310c0 00000070 T irrstScanInput
00131130 0000001c T irrstKeysHeld
0013114c 00000050 T IRRST_GetHandles
0013119c 00000034 T IRRST_Initialize
001311d0 00000124 T irrstInit
001312f4 0000002c T IRRST_Shutdown
00131320 000000a8 T irrstExit
001313c8 0000002c t __ctru_get_reent
001313f4 000000f0 T __system_initSyscalls
001314e4 0000005c T decode_utf16
00131540 00000138 T decode_utf8
00131678 00000054 T encode_utf16
001316cc 000000e0 T encode_utf8
001317ac 000000d4 T utf16_to_utf8
00131880 000000ac T utf8_to_utf16
0013192c 00000054 T rbtree_find
00131980 00000010 T rbtree_init
00131990 00000174 t do_insert
00131b04 00000008 T rbtree_insert
00131b0c 00000014 t is_black
00131b20 000002c8 T rbtree_remove
00131de8 00000094 T rbtree_rotate
00131e7c T loadCROHooked
00131e98 T svcControlMemory
00131eb8 T svcQueryMemory
00131ee8 T svcCreateThread
00131f08 T svcExitThread
00131f10 T svcSleepThread
00131f18 T svcSetThreadPriority
00131f20 T svcReleaseMutex
00131f28 T svcCreateEvent
00131f3c T svcSignalEvent
00131f44 T svcClearEvent
00131f4c T svcMapMemoryBlock
00131f54 T svcUnmapMemoryBlock
00131f5c T svcCreateAddressArbiter
00131f70 T svcArbitrateAddress
00131f88 T svcCloseHandle
00131f90 T svcWaitSynchronization
00131f98 T svcGetSystemTick
00131fa0 T svcGetSystemInfo
00131fb8 T svcGetProcessInfo
00131fd0 T svcConnectToPort
00131fe4 T svcSendSyncRequest
00131fec T svcOpenProcess
00132000 T svcBreak
00132008 T svcInvalidateProcessDataCache
00132010 T svcFlushProcessDataCache
00132018 T svcControlProcessMemory
00132030 T svcBackdoor
00132038 T svcKernelSetState
00132040 T svcQueryProcessMemory
00132064 0000004c T Hook::Hook()
00132064 0000004c T Hook::Hook()
001320b0 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
00132178 00000060 T Hook::Enable()
001321d8 00000060 T Hook::Disable()
00132238 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132238 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132274 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132274 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001322a8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
001322a8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
001322e4 00000008 T CTRPluginFramework::MessageBox::operator()() const
001322ec 00000014 T CTRPluginFramework::Touch::IsDown()
00132300 00000028 T CTRPluginFramework::Touch::GetPosition()
00132328 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00132328 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00132354 00000018 T CTRPluginFramework::LineReader::~LineReader()
00132354 00000018 T CTRPluginFramework::LineReader::~LineReader()
0013236c 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00132480 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00132480 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
001324a8 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00132528 00000048 T CTRPluginFramework::LineWriter::Flush()
00132570 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00132570 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0013258c 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001325fc 00000018 T CTRPluginFramework::LineWriter::Close()
00132614 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00132650 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
00132674 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132698 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132734 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00132734 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00132738 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
0013274c 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00132830 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00132830 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00132890 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
00132898 000000ac T CTRPluginFramework::ComboBox::Draw()
00132944 000000ac T CTRPluginFramework::ComboBox::operator()()
001329f0 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
001329f0 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00132a3c 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
00132a58 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00132a58 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00132aa8 00000038 T CTRPluginFramework::ComboBox::Clear()
00132ae0 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132b38 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00132bc8 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00132bc8 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00132bcc 00000014 T CTRPluginFramework::FloatingButton::Draw()
00132be0 00000014 T CTRPluginFramework::FloatingButton::operator()()
00132bf4 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
00132c08 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
00132dc8 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00132dc8 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00132e0c 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132e0c 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132fe4 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132fe4 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00133154 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
001331cc 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
00133488 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
0013358c 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0013358c 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
001335ac 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
001335c8 00000094 T CTRPluginFramework::NumericTextBox::Draw()
0013365c 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
00133694 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
001336fc 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
001337f4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
00133804 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
00133814 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0013381c 0000000c T CTRPluginFramework::NumericTextBox::Clear()
00133828 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00133828 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00133890 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00133910 00000008 W CTRPluginFramework::Drawable::operator()()
00133918 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0013391c 000002e0 T CTRPluginFramework::TextBox::Draw()
00133bfc 000000ec T CTRPluginFramework::TextBox::TextBox()
00133bfc 000000ec T CTRPluginFramework::TextBox::TextBox()
00133ce8 0000000c T CTRPluginFramework::TextBox::Open() const
00133cf4 0000000c T CTRPluginFramework::TextBox::Close() const
00133d00 00000008 T CTRPluginFramework::TextBox::IsOpen() const
00133d08 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
00133f54 0000000c T CTRPluginFramework::TextBox::DrawConst() const
00133f60 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
00133ff8 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
001340ac 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
00134184 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
001341c0 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
001343a8 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
001343a8 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00134540 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00134628 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00134628 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
0013462c 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00134640 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
001346e0 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
001346e0 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0013473c 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0013473c 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
001347dc 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
001347dc 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00134838 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
00134840 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
00134968 00000088 T CTRPluginFramework::TouchKey::Draw()
001349f0 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00134a88 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00134a88 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00134b34 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
00134be4 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
00134c84 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
00134c9c 00000030 T CTRPluginFramework::TouchKeyString::operator()()
00134ccc 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00134ccc 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00134ce0 00000024 T CTRPluginFramework::UIContainer::Draw()
00134d04 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
00134d38 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
00134d5c 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
00134e34 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
00134e78 000000e4 T CTRPluginFramework::Converter::Converter()
00134e78 000000e4 T CTRPluginFramework::Converter::Converter()
00134f5c 00000010 T CTRPluginFramework::Converter::Instance()
00134f6c 00000108 T CTRPluginFramework::Converter::_Draw()
00135074 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00135074 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00135088 000001e0 T CTRPluginFramework::Converter::operator()()
00135268 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
001352e0 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
001352e0 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0013532c 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
001353e8 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
001354d0 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00135534 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
00135848 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
00135940 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
00135b88 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
00135e08 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00135e08 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00135e0c 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
00135e28 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00135e3c 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
00135ea0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00135f18 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
00135fd8 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00136294 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00136294 00000228 T CTRPluginFramework::GuideReader::GuideReader()
001364bc 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
001368d0 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
001368e8 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00136968 00000154 T CTRPluginFramework::GuideReader::Draw()
00136abc 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
00136b2c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00136b2c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00136b30 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
00136b4c 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00136b60 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
00136bc4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
00136c3c 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
00136c58 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
00136c84 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
00136d04 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
00136e1c 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
00136e4c 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
00136e90 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
00136ed4 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
00136f08 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
00136f5c 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
00136fb0 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
00137230 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
00137268 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
0013784c 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013784c 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
00137a78 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
00137abc 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
00137ca4 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
00137cfc 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
00137de4 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00137e64 00000044 T CTRPluginFramework::HexEditor::_Update()
00137ea8 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
00137ff8 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
001382a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00138320 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
00138320 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
001383fc 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
001383fc 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
00138514 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
00138550 00000030 T CTRPluginFramework::Menu::~Menu()
00138550 00000030 T CTRPluginFramework::Menu::~Menu()
00138580 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0013858c 00000008 T CTRPluginFramework::Menu::GetFolder() const
00138594 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0013859c 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
001385c4 000003a4 T CTRPluginFramework::Menu::Draw() const
00138968 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
001389ec 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
00138a70 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
00138ca0 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
00138e10 00000068 T CTRPluginFramework::Menu::ShowNote()
00138e78 00000008 T CTRPluginFramework::Menu::CloseNote()
00138e80 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
00138e88 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
00138ec8 00000044 T CTRPluginFramework::Menu::Pop()
00138f0c 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
00138fc8 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
00138fc8 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
00138fe8 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
00139004 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
00139004 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
00139098 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00139098 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001390f8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001390f8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00139158 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0013915c 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
00139168 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
00139174 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
00139180 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
0013918c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013918c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
00139190 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
00139190 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
00139194 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
001391b0 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
001391cc 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
001391e0 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
001391f4 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
001392dc 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
00139318 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
00139370 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
00139424 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
00139504 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
00139590 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
001395bc 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00139620 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00139684 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
001396fc 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
00139740 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0013974c 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
00139a78 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
00139b7c 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
00139ddc 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
00139ee0 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0013a2bc 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0013a38c 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0013a40c 0000006c T CTRPluginFramework::PluginMenuHome::Init()
0013a478 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0013a4fc 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0013a558 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013a558 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013a6b0 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
0013a6e8 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013a6e8 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013ae04 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013ae7c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013aefc 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013af7c 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013b088 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013b090 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013b0b4 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013b0d8 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013b0fc 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013b124 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013b14c 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013b174 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013b194 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0013c5d8 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
0013c63c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0013c65c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0013c680 00000004 t addrMapNodeDestructor(rbtree_node*)
0013c684 000000d8 T mappableAlloc
0013c75c 00000050 T mappableFree
0013c7ac 00000008 T envGetHandle
0013c7b4 0000005c t getSysTime
0013c810 000000fc T __libctru_gtod
0013c90c 00000014 W __appExit
0013c920 00000078 W __libctru_exit
0013c998 00000050 T rbtree_node_next
0013c9e8 00000004 T operator delete[](void*)
0013c9ec 00000004 T operator new[](unsigned int)
0013c9f0 0000005c T __cxa_guard_acquire
0013ca4c 0000000c T __cxa_guard_release
0013ca58 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0013cab8 00000070 T __cxa_init_primary_exception
0013cb28 00000054 T __cxa_throw
0013cb7c 000000b0 T __cxa_rethrow
0013cc2c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013cc2c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013cc4c 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013cc78 00000004 T std::exception::~exception()
0013cc78 00000004 T std::exception::~exception()
0013cc7c 00000004 T std::bad_exception::~bad_exception()
0013cc7c 00000004 T std::bad_exception::~bad_exception()
0013cc80 0000000c T transaction clone for std::exception::what() const
0013cc80 0000000c T std::exception::what() const
0013cc8c 0000000c T transaction clone for std::bad_exception::what() const
0013cc8c 0000000c T std::bad_exception::what() const
0013cc98 00000018 T std::bad_exception::~bad_exception()
0013ccb0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013ccb0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013ccd0 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013ccfc 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0013cd68 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0013ce3c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0013ce80 0000000c T __cxa_get_globals_fast
0013ce8c 0000000c T __cxa_get_globals
0013ce98 00000004 T operator delete(void*, unsigned int)
0013ce9c 000000d0 T __cxa_begin_catch
0013cf6c 000000d8 T __cxa_end_catch
0013d044 00000004 T std::type_info::~type_info()
0013d044 00000004 T std::type_info::~type_info()
0013d048 00000008 T std::type_info::__is_pointer_p() const
0013d048 00000008 T std::type_info::__is_function_p() const
0013d050 0000004c T std::type_info::operator==(std::type_info const&) const
0013d09c 00000008 T __cxa_pure_virtual
0013d0a4 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0013d20c 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
0013d26c 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0013d34c 0000074c T __gxx_personality_v0
0013da98 00000004 T operator delete(void*)
0013da9c 0000005c T operator new(unsigned int)
0013daf8 00000010 T __aeabi_atexit
0013db08 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
0013dbd8 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
0013dc8c 00000044 T __cxa_allocate_exception
0013dcd0 00000030 T __cxa_free_exception
0013dd00 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0013dd40 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0013dd9c 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0013ddb0 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0013ddb0 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0013ddd0 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0013ddfc 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0013de64 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0013de90 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0013ded4 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0013deec 00000014 T std::__detail::_List_node_base::_M_unhook()
0013df00 0000002c T std::__throw_bad_alloc()
0013df2c 00000040 T std::__throw_logic_error(char const*)
0013df6c 00000040 T std::__throw_invalid_argument(char const*)
0013dfac 00000040 T std::__throw_length_error(char const*)
0013dfec 00000040 T std::__throw_out_of_range(char const*)
0013e02c 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0013e0a8 00000038 T std::logic_error::logic_error(char const*)
0013e0a8 00000038 T std::logic_error::logic_error(char const*)
0013e0e0 00000020 T std::invalid_argument::invalid_argument(char const*)
0013e0e0 00000020 T std::invalid_argument::invalid_argument(char const*)
0013e100 00000020 T std::length_error::length_error(char const*)
0013e100 00000020 T std::length_error::length_error(char const*)
0013e120 00000020 T std::out_of_range::out_of_range(char const*)
0013e120 00000020 T std::out_of_range::out_of_range(char const*)
0013e140 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0013e1c4 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0013e1c8 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0013e278 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0013e278 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0013e2b8 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0013e30c 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0013e320 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0013e344 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0013e368 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e420 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0013e530 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0013e5a4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013e5a4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013e610 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0013e610 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0013e634 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013e6c4 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0013e7d8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0013e844 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0013e8b0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0013e8d8 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0013e91c 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0013e934 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0013ea38 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
0013ea80 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0013ed08 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0013ed40 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013ed8c 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0013edec 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0013ee80 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013ee90 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013eea0 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0013eecc 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0013ef14 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
0013ef5c 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0013f004 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0013f014 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0013f084 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0013f0b4 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0013f100 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
0013f1b0 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013f1b0 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013f1e0 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0013f290 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0013f308 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
0013f378 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0013f3f0 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0013f4f0 00000014 T std::get_new_handler()
0013f504 00000034 T __cxxabiv1::__terminate(void (*)())
0013f538 00000018 T std::terminate()
0013f550 0000000c T __cxxabiv1::__unexpected(void (*)())
0013f55c 00000018 T std::unexpected()
0013f574 00000014 T std::get_terminate()
0013f588 00000014 T std::get_unexpected()
0013f59c 0000000c T std::bad_alloc::what() const
0013f5a8 00000020 T std::bad_alloc::~bad_alloc()
0013f5a8 00000020 T std::bad_alloc::~bad_alloc()
0013f5c8 0000002c T std::bad_alloc::~bad_alloc()
0013f5f4 T __cxa_end_cleanup
0013f604 00000138 T __cxa_type_match
0013f73c 000000b4 T __cxa_begin_cleanup
0013f7f0 000000b4 T __gnu_end_cleanup
0013f8a4 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0013f914 0000002c T __cxa_call_terminate
0013f940 0000013c T __cxa_call_unexpected
0013fa7c 00000008 T std::logic_error::what() const
0013fa84 00000064 T std::logic_error::~logic_error()
0013fa84 00000064 T std::logic_error::~logic_error()
0013fae8 0000001c T std::logic_error::~logic_error()
0013fb04 00000020 T std::invalid_argument::~invalid_argument()
0013fb04 00000020 T std::invalid_argument::~invalid_argument()
0013fb24 00000028 T std::invalid_argument::~invalid_argument()
0013fb4c 00000020 T std::length_error::~length_error()
0013fb4c 00000020 T std::length_error::~length_error()
0013fb6c 00000028 T std::length_error::~length_error()
0013fb94 00000020 T std::out_of_range::~out_of_range()
0013fb94 00000020 T std::out_of_range::~out_of_range()
0013fbb4 00000028 T std::out_of_range::~out_of_range()
0013fbe0 00000174 T ceil
0013fd54 000000b8 T ceilf
0013fe10 00000174 T floor
0013ff84 00000088 T roundf
00140010 00000020 T log2
00140030 0000015c T log
00140190 000002c4 T __ieee754_log
00140454 00000008 T matherr
00140460 00000010 T nan
00140470 0000002c t __aeabi_f2lz
00140470 0000002c T __fixsfdi
001404a0 00000050 t __aeabi_f2ulz
001404a0 00000050 T __fixunssfdi
001404f0 00000158 t __udivmoddi4
00140648 00000018 t selfrel_offset31
00140660 0000008c t search_EIT_table
001406ec 00000040 t __gnu_unwind_get_pr_addr
0014072c 00000118 t get_eit_entry
00140844 00000088 t restore_non_core_regs
001408cc 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
001408e0 00000004 t _Unwind_DebugHook
001408e4 00000068 t unwind_phase2
0014094c 00000134 t unwind_phase2_forced
00140a80 000000a8 t __gnu_Unwind_RaiseException
00140b28 00000024 t __gnu_Unwind_ForcedUnwind
00140b4c 00000074 t __gnu_Unwind_Resume
00140bc0 00000020 t __gnu_Unwind_Resume_or_Rethrow
00140be0 00000004 t _Unwind_Complete
00140be4 00000018 t _Unwind_DeleteException
00140bfc 00000068 t _Unwind_VRS_Get
00140c64 0000002c t _Unwind_GetGR
00140c90 00000068 t _Unwind_VRS_Set
00140cf8 0000002c t _Unwind_SetGR
00140d24 000000c0 t __gnu_Unwind_Backtrace
00140de4 0000044c t __gnu_unwind_pr_common
00141230 00000008 T __aeabi_unwind_cpp_pr0
00141238 00000008 W __aeabi_unwind_cpp_pr1
00141240 00000008 W __aeabi_unwind_cpp_pr2
00141248 00000418 t _Unwind_VRS_Pop
00141660 00000060 t next_unwind_byte
001416c0 0000002c t _Unwind_GetGR.constprop.0
001416ec 00000004 t unwind_UCB_from_context
001416f0 000003c8 t __gnu_unwind_execute
00141ab8 00000048 t __gnu_unwind_frame
00141b00 00000010 t _Unwind_GetRegionStart
00141b10 0000001c t _Unwind_GetLanguageSpecificData
00141b2c 00000008 t _Unwind_GetDataRelBase
00141b34 00000008 t _Unwind_GetTextRelBase
00141b3c 00000010 T ctime
00141b4c 00000014 T __cxa_atexit
00141b60 0000000c T __errno
00141b6c 00000034 T exit
00141ba0 00000040 T __libc_fini_array
00141be0 0000007c T __libc_init_array
00141c5c 0000001c T isspace
00141c78 0000001c T isxdigit
00141c94 0000001c T localtime
00141cb0 00000364 T localtime_r
00142014 00000024 T __locale_mb_cur_max
00142038 00000008 T __locale_ctype_ptr_l
00142040 00000024 T __locale_ctype_ptr
00142064 00000018 T malloc
0014207c 00000018 T free
00142094 000007a8 T _malloc_r
0014283c 000002fc T __utf8_mbtowc
00142b38 00000100 T memchr
00142c38 000000fc T memcmp
00142d34 0000010c T memcpy
00142e40 0000013c T memmove
00142f7c 00000110 T memset
0014308c 0000000c T __malloc_lock
00143098 0000000c T __malloc_unlock
001430a4 00000064 T sprintf
00143108 00000008 T __seofread
00143110 000000f0 T strcpy
00143200 00000158 t iso_year_adjust
00143358 00001024 t __strftime
0014437c 00000050 T strftime
001443cc 0000005c T strlen
00144428 000000f8 T strncmp
00144520 000000d8 T strncpy
001445f8 00000054 t sulp
00144650 00001464 T _strtod_l
00145ab8 000000b8 T strtof
00145b70 000001bc t _strtol_l.isra.0
00145d2c 00000050 T _strtol_r
00145d80 00000260 t _strtoull_l.isra.0
00145fe0 00000050 T _strtoull_r
00146030 000001d0 t _strtoul_l.isra.0
00146200 00000050 T _strtoul_r
00146250 00000054 T strtoul
001462a4 000074a0 t get_arg
0014d748 00003e2c T _svfprintf_r
00151574 00000038 T time
001515ac 00000218 T __tzcalc_limits
001517c4 0000000c T __tz_lock
001517d0 0000000c T __tz_unlock
001517dc 00000010 T _tzset_unlocked
001517ec 0000049c T _tzset_unlocked_r
00151c88 000000a0 T _vsnprintf_r
00151d28 00000038 T vsnprintf
00151d60 000000a0 T _wcrtomb_r
00151e00 00000020 T _wcsrtombs_r
00151e20 000000e8 T __utf8_wctomb
00151f08 0000000c T abs
00151f14 0000001c T asctime
00151f30 00000078 T asctime_r
00151fa8 000000f4 T __register_exitproc
0015209c 00000170 T __call_exitprocs
0015220c 000001bc t quorem
001523c8 00001224 T _dtoa_r
001535ec 000000f8 T _malloc_trim_r
001536e4 000002e4 T _free_r
001539c8 00000104 t rshift
00153acc 000007f8 T __gethex
001542c4 00000060 T __match
00154324 00000254 T __hexnan
00154578 000000c8 T _findenv_r
00154640 00000018 T _getenv_r
00154658 0000000c T __gettzinfo
00154664 00000280 T gmtime_r
001548e4 0000000c T labs
001548f0 00000008 T __localeconv_l
001548f8 00000024 T _localeconv_r
0015491c 00000088 T _Balloc
001549a4 0000001c T _Bfree
001549c0 000000d0 T __multadd
00154a90 000000e0 T __s2b
00154b70 00000058 T __hi0bits
00154bc8 0000009c T __lo0bits
00154c64 00000020 T __i2b
00154c84 000001d4 T __multiply
00154e58 00000100 T __pow5mult
00154f58 000000e8 T __lshift
00155040 0000005c T __mcmp
0015509c 00000168 T __mdiff
00155204 00000078 T __ulp
0015527c 000000d0 T __b2d
0015534c 00000104 T __d2b
00155450 00000084 T __ratio
001554d4 00000088 T __copybits
0015555c 00000078 T __any_on
001555d4 0000000c T nanf
001555e0 0000009c T frexp
0015567c 00000064 T siprintf
001556e0 00000074 T siscanf
00155754 000000c8 T sniprintf
0015581c 000074a0 t get_arg
0015ccbc 00000188 T __ssprint_r
0015ce44 0000295c T _svfiprintf_r
0015f7a0 000000dc T _sungetc_r
0015f87c 0000006c T __ssrefill_r
0015f8e8 000000c8 T _sfread_r
0015f9b0 00001d84 T __ssvfiscanf_r
00161734 000000a4 T __submore
001617d8 00000170 T _wcsnrtombs_l
00161948 00000064 T _wcsnrtombs_r
001619ac 00000090 T _calloc_r
00161a3c 0000000c T __env_lock
00161a48 0000000c T __env_unlock
00161a54 00000074 T iswspace
00161ac8 000001e0 t __jp2uc
00161ca8 000000c4 T _jp2uc
00161d6c 000000b4 T _mbrtowc_r
00161e20 000004d0 T _realloc_r
001622f0 000000cc T __sccl
001623bc 00000274 t _strtoll_l.isra.0
00162630 00000050 T _strtoll_r
00162680 0000002c T _gettimeofday_r
001626ac 00000070 T _sbrk_r
0016271c 00000024 T _exit
00162740 00000018 T __libc_lock_acquire
00162758 00000018 T __libc_lock_release
00162770 00000018 T __libc_lock_acquire_recursive
00162788 00000018 T __libc_lock_release_recursive
001627a0 00000028 T __getreent
001627c8 T _fini
00162824 00000030 r ._184
0016285c 00000058 r CTRPluginFramework::g_OSDPattern
001628b4 00000a00 r font
001632b4 00000038 r CTRPluginFramework::stable
001632ec 00000038 r CTRPluginFramework::ktable
00163324 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
00163340 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
00163354 00000030 r ._184
001633a4 00000038 R vtable for CTRPluginFramework::Search32
001633dc 00000038 R vtable for CTRPluginFramework::Search
00163414 00000005 r CSWTCH.47
0016341c 00000014 R vtable for CTRPluginFramework::ARCode
00163430 0000002d r ._89
00163460 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
001634e0 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
001634ec 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
001634f4 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
001634fc 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
00163504 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
00163520 00000004 R About15_array_length
00163524 00000384 r About15_array
001638a8 00000004 R AddFavorite25_array_length
001638ac 000009c4 r AddFavorite25_array
00164270 00000004 R AddFavoriteFilled25_array_length
00164274 000009c4 r AddFavoriteFilled25_array
00164c38 00000004 R CapsLockOn15_array_length
00164c3c 00000384 r CapsLockOn15_array
00164fc0 00000004 R CapsLockOnFilled15_array_length
00164fc4 00000384 r CapsLockOnFilled15_array
00165348 00000004 R CheckedCheckbox_array_length
0016534c 00000384 r CheckedCheckbox_array
001656d0 00000004 R ClearSymbol15_array_length
001656d4 00000384 r ClearSymbol15_array
00165a58 00000004 R ClearSymbolFilled15_array_length
00165a5c 00000384 r ClearSymbolFilled15_array
00165de0 00000004 R Clipboard25_array_length
00165de4 000009c4 r Clipboard25_array
001667a8 00000004 R ClipboardFilled25_array_length
001667ac 000009c4 r ClipboardFilled25_array
00167170 00000004 R CloseWindow20_array_length
00167174 00000640 r CloseWindow20_array
001677b4 00000004 R CloseWindowFilled20_array_length
001677b8 00000640 r CloseWindowFilled20_array
00167df8 00000004 R Controller15_array_length
00167dfc 00000384 r Controller15_array
00168180 00000004 R Cut25_array_length
00168184 000009c4 r Cut25_array
00168b48 00000004 R CutFilled25_array_length
00168b4c 000009c4 r CutFilled25_array
00169510 00000004 R Duplicate25_array_length
00169514 000009c4 r Duplicate25_array
00169ed8 00000004 R DuplicateFilled25_array_length
00169edc 000009c4 r DuplicateFilled25_array
0016a8a0 00000004 R Edit25_array_length
0016a8a4 000009c4 r Edit25_array
0016b268 00000004 R EditFilled25_array_length
0016b26c 000009c4 r EditFilled25_array
0016bc30 00000004 R EnterKey15_array_length
0016bc34 00000384 r EnterKey15_array
0016bfb8 00000004 R EnterKeyFilled15_array_length
0016bfbc 00000384 r EnterKeyFilled15_array
0016c340 00000004 R File15_array_length
0016c344 00000384 r File15_array
0016c6c8 00000004 R FolderFilled_array_length
0016c6cc 00000384 r FolderFilled_array
0016ca50 00000004 R GameController15_array_length
0016ca54 00000384 r GameController15_array
0016cdd8 00000004 R GameController25_array_length
0016cddc 000009c4 r GameController25_array
0016d7a0 00000004 R GameControllerFilled25_array_length
0016d7a4 000009c4 r GameControllerFilled25_array
0016e168 00000004 R Grid15_array_length
0016e16c 00000384 r Grid15_array
0016e4f0 00000004 R HandCursor15_array_length
0016e4f4 00000384 r HandCursor15_array
0016e878 00000004 R Info25_array_length
0016e87c 000009c4 r Info25_array
0016f240 00000004 R InfoFilled25_array_length
0016f244 000009c4 r InfoFilled25_array
0016fc08 00000004 R Keyboard25_array_length
0016fc0c 000009c4 r Keyboard25_array
001705d0 00000004 R KeyboardFilled25_array_length
001705d4 000009c4 r KeyboardFilled25_array
00170f98 00000004 R Maintenance15_array_length
00170f9c 00000384 r Maintenance15_array
00171320 00000004 R More15_array_length
00171324 00000384 r More15_array
001716a8 00000004 R Plus25_array_length
001716ac 000009c4 r Plus25_array
00172070 00000004 R PlusFilled25_array_length
00172074 000009c4 r PlusFilled25_array
00172a38 00000004 R RAM15_array_length
00172a3c 00000384 r RAM15_array
00172dc0 00000004 R Restart15_array_length
00172dc4 00000384 r Restart15_array
00173148 00000004 R Rocket40_array_length
0017314c 00001900 r Rocket40_array
00174a4c 00000004 R Save25_array_length
00174a50 000009c4 r Save25_array
00175414 00000004 R Search15_array_length
00175418 00000384 r Search15_array
0017579c 00000004 R Settings15_array_length
001757a0 00000384 r Settings15_array
00175b24 00000004 R Shutdown15_array_length
00175b28 00000384 r Shutdown15_array
00175eac 00000004 R Star15_array_length
00175eb0 00000384 r Star15_array
00176234 00000004 R Trash25_array_length
00176238 000009c4 r Trash25_array
00176bfc 00000004 R TrashFilled25_array_length
00176c00 000009c4 r TrashFilled25_array
001775c4 00000004 R UnCheckedCheckbox_array_length
001775c8 00000384 r UnCheckedCheckbox_array
0017794c 00000004 R UserManualFilled15_array_length
00177950 00000384 r UserManualFilled15_array
00177cd4 0000001c R vtable for CTRPluginFramework::CheckBox
00177cf0 0000001c R vtable for CTRPluginFramework::ComboBox
00177d0c 0000001c R vtable for CTRPluginFramework::FloatingButton
00177d28 0000001c R vtable for CTRPluginFramework::NumericTextBox
00177d44 0000001c R vtable for CTRPluginFramework::TextBox
00177d60 0000001c R vtable for CTRPluginFramework::TouchKey
00177d7c 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
00177d9c 00000280 r CTRPluginFramework::_cursorPositions
0017801c 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
00178024 00000048 r CTRPluginFramework::g_ctrpf
0017806c 00000030 r CTRPluginFramework::g_byme
00179354 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
00179370 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
001794d8 00000014 V vtable for CTRPluginFramework::MenuItem
001794ec 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
00179508 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
00179578 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
00179594 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
001795b0 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
001795cc 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
0017a5f4 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
0017a618 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
0017a798 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0017a7b4 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
0017a7d0 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
0017a81c 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0017a828 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0017a84c 00000014 R vtable for __gnu_cxx::recursive_init_error
0017a884 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0017a88c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0017a894 0000000c R typeinfo for std::bad_exception
0017a8a0 00000008 R typeinfo for std::exception
0017a8a8 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0017a8c8 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0017a8ec 00000012 R typeinfo name for std::bad_exception
0017a900 0000000d R typeinfo name for std::exception
0017a910 00000014 R vtable for std::bad_exception
0017a924 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0017a930 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0017a958 0000002c R vtable for __cxxabiv1::__si_class_type_info
0017a984 00000008 R typeinfo for std::type_info
0017a98c 0000000d R typeinfo name for std::type_info
0017a99c 0000000c R typeinfo for __cxxabiv1::__class_type_info
0017a9a8 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0017a9cc 0000002c R vtable for __cxxabiv1::__class_type_info
0017abe0 0000000c R typeinfo for std::bad_alloc
0017abec 0000000d R typeinfo name for std::bad_alloc
0017abfc 00000014 R vtable for std::bad_alloc
0017ac10 0000000c R typeinfo for std::logic_error
0017ac1c 0000000c R typeinfo for std::length_error
0017ac28 0000000c R typeinfo for std::out_of_range
0017ac34 0000000c R typeinfo for std::invalid_argument
0017ac40 00000010 R typeinfo name for std::logic_error
0017ac50 00000011 R typeinfo name for std::length_error
0017ac64 00000011 R typeinfo name for std::out_of_range
0017ac78 00000015 R typeinfo name for std::invalid_argument
0017ac90 00000014 R vtable for std::logic_error
0017aca4 00000014 R vtable for std::length_error
0017acb8 00000014 R vtable for std::out_of_range
0017accc 00000014 R vtable for std::invalid_argument
0017ace4 00000004 R _global_impure_ptr
0017ad2c 00000060 R __month_lengths
0017ae18 00000014 r fpi.7439
0017ae2c 00000014 r fpinan.7475
0017ae40 00000028 r tinytens
0017aeac 00000010 r blanks.8562
0017aebc 00000010 r zeroes.8563
0017aecc 000000fc R _C_time_locale
0017b194 00000015 r day_name.6011
0017b1ac 00000024 r mon_name.6012
0017b1d0 00000101 R _ctype_
0017b2e4 00000100 R __hexdig
0017b3e8 00000028 R __mprec_bigtens
0017b410 000000c8 R __mprec_tens
0017b4d8 0000000c r p05.7353
0017b4e4 0000006c R __action_table
0017b550 00000100 R __chclass
0017b650 0000006c R __state_table
0017b6bc 00000010 r blanks.8541
0017b6cc 00000010 r zeroes.8542
0017b6dc 00000022 r basefix.8096
0017b714 000000bc r a1
0017b7d0 000000bc r a2
0017b88c 0000005b r a3
0017b8e8 00000070 r a6
0017b958 000000a2 r a7
0017b9fc 00000040 r a8
0017ba3c 0000172a r b02cf
0017d168 00001a7c r d02f4
0017ee50 R __exidx_start
0017f070 R __exidx_end
0017f070 00000001 D CTRPluginFramework::g_keepRunning
0017f074 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0017f078 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0017f07c 00000001 D CTRPluginFramework::PrivColor::_format
0017f080 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0017f084 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0017f088 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
0017f089 00000001 D CTRPluginFramework::SystemImpl::_language
0017f08c 00000004 D g_KProcessPIDOffset
0017f090 00000004 D About15
0017f094 00000004 D AddFavorite25
0017f098 00000004 D AddFavoriteFilled25
0017f09c 00000004 D CapsLockOn15
0017f0a0 00000004 D CapsLockOnFilled15
0017f0a4 00000004 D CheckedCheckbox
0017f0a8 00000004 D ClearSymbol15
0017f0ac 00000004 D ClearSymbolFilled15
0017f0b0 00000004 D Clipboard25
0017f0b4 00000004 D ClipboardFilled25
0017f0b8 00000004 D CloseWindow20
0017f0bc 00000004 D CloseWindowFilled20
0017f0c0 00000004 D Controller15
0017f0c4 00000004 D Cut25
0017f0c8 00000004 D CutFilled25
0017f0cc 00000004 D Duplicate25
0017f0d0 00000004 D DuplicateFilled25
0017f0d4 00000004 D Edit25
0017f0d8 00000004 D EditFilled25
0017f0dc 00000004 D EnterKey15
0017f0e0 00000004 D EnterKeyFilled15
0017f0e4 00000004 D File15
0017f0e8 00000004 D FolderFilled
0017f0ec 00000004 D GameController15
0017f0f0 00000004 D GameController25
0017f0f4 00000004 D GameControllerFilled25
0017f0f8 00000004 D Grid15
0017f0fc 00000004 D HandCursor15
0017f100 00000004 D Info25
0017f104 00000004 D InfoFilled25
0017f108 00000004 D Keyboard25
0017f10c 00000004 D KeyboardFilled25
0017f110 00000004 D Maintenance15
0017f114 00000004 D More15
0017f118 00000004 D Plus25
0017f11c 00000004 D PlusFilled25
0017f120 00000004 D RAM15
0017f124 00000004 D Restart15
0017f128 00000004 D Rocket40
0017f12c 00000004 D Save25
0017f130 00000004 D Search15
0017f134 00000004 D Settings15
0017f138 00000004 D Shutdown15
0017f13c 00000004 D Star15
0017f140 00000004 D Trash25
0017f144 00000004 D TrashFilled25
0017f148 00000004 D UnCheckedCheckbox
0017f14c 00000004 D UserManualFilled15
0017f150 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0017f154 D __dso_handle
0017f158 00000004 D __cxxabiv1::__unexpected_handler
0017f15c 00000004 D __cxxabiv1::__terminate_handler
0017f160 00000001 D __fdlib_version
0017f164 00000004 D _impure_ptr
0017f168 00000460 d impure_data
0017f5c8 0000016c D __global_locale
0017f734 00000408 D __malloc_av_
0017fb3c 00000004 D __malloc_sbrk_base
0017fb40 00000004 D __malloc_trim_threshold
0017fb44 0000000c d __malloc_lock_object
0017fb50 00000004 d __tz_lock_object
0017fb54 00000008 D _tzname
0017fb5c 0000000c D __atexit_lock
0017fb68 00000040 d tzinfo
0017fba8 00000004 D environ
0017fbac 0000000c d __env_lock_object
0017fbb8 a _DYNAMIC
0017fc90 a _GLOBAL_OFFSET_TABLE_
0017fca8 t __frame_dummy_init_array_entry
0017fca8 T __init_array_start
0017fca8 B __preinit_array_end
0017fca8 B __preinit_array_start
0017fca8 D __tdata_lma
0017fca8 D __tdata_lma_end
0017fca8 D __TMC_END__
0017fcf4 t __do_global_dtors_aux_fini_array_entry
0017fcf4 T __fini_array_start
0017fcf4 T __init_array_end
0017fcf8 T __fini_array_end
0017fcf8 r __rel_dyn_start
00195ec0 B __c_bss_start
00195ec0 r __rel_dyn_end
00195ec0 00000050 B CTRPluginFramework::QuickMenu::_instance
00195f10 00000008 B CTRPluginFramework::_sdmcArchive
00195f18 00000004 B CTRPluginFramework::g_continueGameEvent
00195f1c 00000004 B __ctru_heap_size
00195f20 00000004 B g_gspEventThreadPriority
00195f24 00000004 B CTRPluginFramework::g_keepEvent
00195f28 00000004 B g_mainThread
00195f2c 00000004 b onLoadCroLock
00195f30 00000038 b g_loadCroHook
00195f68 00000004 B croReturn
00195f6c 00000004 B CTRPluginFramework::g_keepThreadHandle
00195f70 00000004 B CTRPluginFramework::g_resumeEvent
00195f78 00004000 b CTRPluginFramework::keepThreadStack
00199f78 00010000 b CTRPluginFramework::threadStack
001a9f78 00000004 B CTRPluginFramework::Color::Black
001a9f7c 00000004 B CTRPluginFramework::Color::Blank
001a9f80 00000004 B CTRPluginFramework::Color::Blue
001a9f84 00000004 B CTRPluginFramework::Color::BlackGrey
001a9f88 00000004 B CTRPluginFramework::Color::Brown
001a9f8c 00000004 B CTRPluginFramework::Color::Cyan
001a9f90 00000004 B CTRPluginFramework::Color::DarkGrey
001a9f94 00000004 B CTRPluginFramework::Color::DeepSkyBlue
001a9f98 00000004 B CTRPluginFramework::Color::DimGrey
001a9f9c 00000004 B CTRPluginFramework::Color::DodgerBlue
001a9fa0 00000004 B CTRPluginFramework::Color::Gainsboro
001a9fa4 00000004 B CTRPluginFramework::Color::ForestGreen
001a9fa8 00000004 B CTRPluginFramework::Color::Green
001a9fac 00000004 B CTRPluginFramework::Color::Grey
001a9fb0 00000004 B CTRPluginFramework::Color::LimeGreen
001a9fb4 00000004 B CTRPluginFramework::Color::Magenta
001a9fb8 00000004 B CTRPluginFramework::Color::Orange
001a9fbc 00000004 B CTRPluginFramework::Color::Red
001a9fc0 00000004 B CTRPluginFramework::Color::Silver
001a9fc4 00000004 B CTRPluginFramework::Color::SkyBlue
001a9fc8 00000004 B CTRPluginFramework::Color::Turquoise
001a9fcc 00000004 B CTRPluginFramework::Color::Yellow
001a9fd0 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a9fd8 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a9fe0 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a9fe8 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a9fec 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a9ff0 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001a9ff4 00000180 b CTRPluginFramework::g_keyName
001aa174 00000004 b CTRPluginFramework::g_runningInstance
001aa178 00000004 B CTRPluginFramework::Controller::_keysDown
001aa17c 00000004 B CTRPluginFramework::Controller::_keysHeld
001aa180 00000004 B CTRPluginFramework::Controller::_keysReleased
001aa184 00000018 b CTRPluginFramework::_workingDirectory
001aa19c 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
001ac1a0 00000004 B CTRPluginFramework::System::OnAbort
001ac1a8 00000008 B CTRPluginFramework::Time::Zero
001ac1b0 000009c4 b CTRPluginFramework::g_rng
001acb78 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
001acb79 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
001acb7a 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
001acb7b 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
001acb7c 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
001acb7d 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
001acb7e 00000001 B CTRPluginFramework::Preferences::ShowTopFps
001acb7f 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
001acb80 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
001acb81 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
001acb82 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
001acb84 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
001acb88 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
001acb90 00000078 B CTRPluginFramework::Preferences::Settings
001acc08 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
001acc09 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
001acc0a 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
001acc0c 00000004 b CTRPluginFramework::defaultSysFont
001acc10 00000004 B CTRPluginFramework::g_fontAllocated
001acc14 00000004 b CTRPluginFramework::tileData
001acc18 00000004 b CTRPluginFramework::glyph
001acc1c 00000004 B CTRPluginFramework::g_glyphAllocated
001acc20 0000000c B CTRPluginFramework::OSDImpl::RecLock
001acc2c 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
001acc38 00000018 B CTRPluginFramework::OSDImpl::TopScreen
001acc50 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
001acc68 00000038 B CTRPluginFramework::OSDImpl::OSDHook
001acca0 00000004 B CTRPluginFramework::OSDImpl::HookReturn
001acca4 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
001accac 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
001accd0 0000000c B CTRPluginFramework::OSDImpl::Callbacks
001accdc 00000004 b CTRPluginFramework::g_second
001acce0 00000010 b CTRPluginFramework::g_fpsClock
001accf0 00000038 B CTRPluginFramework::OSDHook2
001acd28 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
001acd2c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
001acd2d 00000001 B CTRPluginFramework::OSDImpl::MessColors
001acd30 00000001 B CTRPluginFramework::PrivColor::_useClamp
001acd34 00000010 B CTRPluginFramework::PrivColor::_clampArea
001acd44 00000001 B CTRPluginFramework::Renderer::_target
001acd48 00000004 B CTRPluginFramework::Renderer::_screen
001acd4c 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
001acd50 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
001acd54 00000004 B CTRPluginFramework::RendererPriv::g_customColor
001acd58 00000028 B CTRPluginFramework::Window::BottomWindow
001acd80 00000028 B CTRPluginFramework::Window::TopWindow
001acda8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001acdb8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001acdc8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001acdcc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001acdd0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001acdd4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001acde4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001acde8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001acdf8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001acdfc 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001ace0c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001ace10 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001ace18 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001ace20 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001ace28 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001ace30 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001ace38 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
001ace3c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
001ace48 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
001ace54 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
001ace60 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001ace68 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001ace70 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001ace74 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001ace84 00000004 B CTRPluginFramework::MenuItem::_uidCounter
001ace88 00000004 b CTRPluginFramework::__pmARinstance
001ace8c 00000004 b CTRPluginFramework::g_radioId
001ace90 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
001ace94 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
001ace98 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
001acea0 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
001acea4 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
001acea8 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001aceb0 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001aced0 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001acee0 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001acef0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001acef4 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001acef8 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001acf00 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001acf08 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
001acf10 00000004 b CTRPluginFramework::g_mode
001acf14 00000004 b CTRPluginFramework::g_HookMode
001acf18 00000004 B CTRPluginFramework::g_index
001acf1c 00000004 B CTRPluginFramework::g_OpenFileLock
001acf20 00000004 B CTRPluginFramework::g_filenames
001acf24 00000004 b CTRPluginFramework::g_buffer2
001acf28 00000030 b CTRPluginFramework::g_hookExportFile
001acf58 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
001acf90 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
001acf94 00000004 b CTRPluginFramework::g_buffer
001acf98 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
001acf9c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001acfa0 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001acfa8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001acfb0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001acfb8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001acfc0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001acfc8 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
001acfcc 00000010 b CTRPluginFramework::SubMenu::Draw()::background
001acfdc 00000004 B CTRPluginFramework::_pool
001acfe0 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
001acfe2 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
001acfe8 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
001acfec 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
001acff0 00000008 b CTRPluginFramework::Heap::g_heapPool
001acff8 0000000c b sAddrMap
001ad008 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
001ad00c 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
001ad070 00000004 B CTRPluginFramework::ProcessImpl::_processID
001ad074 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
001ad078 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
001ad07c 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
001ad080 00000008 B CTRPluginFramework::ProcessImpl::_processName
001ad088 00000008 B CTRPluginFramework::ProcessImpl::_titleID
001ad090 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
001ad094 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
001ad098 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
001ad0a4 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
001ad0a8 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
001ad0ac 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
001ad0b0 00000038 b CTRPluginFramework::_topBuf
001ad0e8 00000004 B CTRPluginFramework::ScreenImpl::Top
001ad0ec 00000038 b CTRPluginFramework::_botBuf
001ad124 00000004 B CTRPluginFramework::ScreenImpl::Bottom
001ad128 00000001 B CTRPluginFramework::SystemImpl::_isInit
001ad129 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
001ad12c 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
001ad130 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
001ad134 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
001ad138 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
001ad13c 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
001ad140 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
001ad144 0000000c B CTRPluginFramework::g_codeTypes
001ad150 00000001 b CTRPluginFramework::g_condAgainstData
001ad151 00000001 b CTRPluginFramework::g_newCondDataToggle
001ad154 00000004 b CTRPluginFramework::__arCodeEditor
001ad158 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001ad15c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001ad168 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
001ad16c 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001ad170 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001ad17c 00000001 B CTRPluginFramework::g_heapError
001ad180 00000004 b cfguRefCount
001ad184 00000004 b cfguHandle
001ad188 00000004 b sharedFontAddr
001ad18c 00000004 b srvRefCount
001ad190 00000004 b srv2Handle
001ad194 00000004 b arbiter
001ad198 00000004 b acRefCount
001ad19c 00000004 b acHandle
001ad1a0 00000004 b amRefCount
001ad1a4 00000004 b amHandle
001ad1a8 0000000c b aptFirstHook
001ad1b4 00000004 b aptLockHandle
001ad1b8 00000004 b serviceName.7503
001ad1bc 00000004 b aptMessageFunc
001ad1c0 00000004 b aptMessageFuncData
001ad1c4 0000000c b aptEvents
001ad1d0 00000001 b aptHomeButtonState
001ad1d4 00000004 b aptRefCount
001ad1d8 00000008 b aptSleepEvent
001ad1e0 00000004 b aptEventHandlerThread
001ad1e4 00000001 b flagInit.7855
001ad1e5 00000001 b flagValue.7856
001ad1e8 00001000 b aptParameters
001ae1e8 00000004 b fsuHandle
001ae1f0 00000080 b fsExemptArchives
001ae270 00000004 b fsuRefCount
001ae274 00000001 B fs
001ae278 00000004 b gspEventData
001ae27c 00000038 b gspEvents
001ae2b4 0000001c b gspEventCounts
001ae2d0 00000001 b gspRunEvents
001ae2d4 00000004 b gspRefCount
001ae2d8 00000004 b gfxSharedMemory
001ae2dc 00000001 b gfxThreadID
001ae2dd 00001000 b gspThreadEventStack
001af2e0 00000004 b hidRefCount
001af2e4 00000004 b kOld
001af2e8 00000004 b kHeld
001af2ec 00000004 b cPos
001af2f0 00000004 b tPos
001af2f4 00000006 b aVec
001af2fa 00000006 b gRate
001af300 00000004 b kDown
001af304 00000004 b kUp
001af308 00000004 b irrstRefCount
001af30c 00000004 b kHeld
001af310 00000004 b csPos
001af314 00000004 B _tls_size
001af318 b saved_stack
001af320 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001af324 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001af33c 00000004 b CTRPluginFramework::__converter
001af340 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
001af344 00000010 b CTRPluginFramework::GuideReader::Draw()::background
001af358 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001af360 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001af368 00000004 B CTRPluginFramework::__g_hexEditor
001af36c 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001af370 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001af380 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
001af388 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
001af38c 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001af390 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001af398 00000004 b CTRPluginFramework::g_ctrpfString
001af39c 00000004 b CTRPluginFramework::g_bymeString
001af3a0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001af3a8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001af3b0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001af3b8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001af3c0 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
001af3c4 00000004 B CTRPluginFramework::ARHandler::ActiveData
001af3c8 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
001af3cc 00000008 B CTRPluginFramework::ARHandler::Offset
001af3d4 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
001af3d8 00000010 B CTRPluginFramework::ARHandler::Data
001af3e8 00000008 B CTRPluginFramework::ARHandler::Storage
001af3f0 00000001 b CTRPluginFramework::ToggleFloat
001af3f4 00000008 b sMappablePool
001af3fc 0000000c b sAddrMap
001af408 b completed.7759
001af40c b object.7764
001af424 0000000c b eh_globals
001af430 00000010 b (anonymous namespace)::emergency_pool
001af440 00000010 V std::string::_Rep::_S_empty_rep_storage
001af450 00000004 b (anonymous namespace)::__new_handler
001af454 00000028 B __malloc_current_mallinfo
001af47c 00000004 B __malloc_max_sbrked_mem
001af480 00000004 B __malloc_max_total_mem
001af484 00000004 B __malloc_top_pad
001af488 0000000b b __tzname_dst
001af494 0000000b b __tzname_std
001af4a0 00000004 b prev_tzenv
001af4a4 00000004 B _daylight
001af4a8 00000004 B _timezone
001af4ac 00000004 b initial_env
001af4b0 00000004 b heap_start.7089
001af4b4 00000004 B fake_heap_end
001af4b8 00000004 B fake_heap_start
001af4bc 00000038 B __syscalls
001af4f4 00000004 B g_KProcessHandleDataOffset
001af4f8 00000080 B g_kernelParams
001af578 00000004 B g_sharedFont
001af57c 00000004 B charPerSheet
001af580 00000004 B gspEvent
001af584 00000004 B gspGpuHandle
001af588 00000004 B gspSharedMemHandle
001af58c 00000004 B gspThreadEventHandle
001af590 00000004 B hidMemHandle
001af594 00000004 B hidHandle
001af598 00000014 B hidEvents
001af5ac 00000004 B hidSharedMem
001af5b0 00000004 B irrstMemHandle
001af5b4 00000004 B irrstEvent
001af5b8 00000004 B irrstHandle
001af5bc 00000004 B irrstSharedMem
001af5c0 00000004 B __ctru_linear_heap
001af5c4 00000004 B __tmp
001af5c8 00000004 B __ctru_linear_heap_size
001af5cc 00000004 B __system_retAddr
001af5d0 00000004 B __ctru_heap
001af5d4 B __c_bss_end
001af5d4 A __end__
001af5d4 B __tls_end
001af5d4 B __tls_start
